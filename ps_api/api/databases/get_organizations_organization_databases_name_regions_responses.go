// Code generated by go-swagger; DO NOT EDIT.

package databases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetOrganizationsOrganizationDatabasesNameRegionsReader is a Reader for the GetOrganizationsOrganizationDatabasesNameRegions structure.
type GetOrganizationsOrganizationDatabasesNameRegionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationsOrganizationDatabasesNameRegionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationsOrganizationDatabasesNameRegionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetOrganizationsOrganizationDatabasesNameRegionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrganizationsOrganizationDatabasesNameRegionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrganizationsOrganizationDatabasesNameRegionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrganizationsOrganizationDatabasesNameRegionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /organizations/{organization}/databases/{name}/regions] get_organizations_organization_databases_name_regions", response, response.Code())
	}
}

// NewGetOrganizationsOrganizationDatabasesNameRegionsOK creates a GetOrganizationsOrganizationDatabasesNameRegionsOK with default headers values
func NewGetOrganizationsOrganizationDatabasesNameRegionsOK() *GetOrganizationsOrganizationDatabasesNameRegionsOK {
	return &GetOrganizationsOrganizationDatabasesNameRegionsOK{}
}

/*
GetOrganizationsOrganizationDatabasesNameRegionsOK describes a response with status code 200, with default header values.

Returns the available regions for a database
*/
type GetOrganizationsOrganizationDatabasesNameRegionsOK struct {
	Payload *GetOrganizationsOrganizationDatabasesNameRegionsOKBody
}

// IsSuccess returns true when this get organizations organization databases name regions o k response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organizations organization databases name regions o k response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases name regions o k response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations organization databases name regions o k response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization databases name regions o k response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesNameRegionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get organizations organization databases name regions o k response
func (o *GetOrganizationsOrganizationDatabasesNameRegionsOK) Code() int {
	return 200
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{name}/regions][%d] getOrganizationsOrganizationDatabasesNameRegionsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsOK) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{name}/regions][%d] getOrganizationsOrganizationDatabasesNameRegionsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsOK) GetPayload() *GetOrganizationsOrganizationDatabasesNameRegionsOKBody {
	return o.Payload
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetOrganizationsOrganizationDatabasesNameRegionsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsOrganizationDatabasesNameRegionsUnauthorized creates a GetOrganizationsOrganizationDatabasesNameRegionsUnauthorized with default headers values
func NewGetOrganizationsOrganizationDatabasesNameRegionsUnauthorized() *GetOrganizationsOrganizationDatabasesNameRegionsUnauthorized {
	return &GetOrganizationsOrganizationDatabasesNameRegionsUnauthorized{}
}

/*
GetOrganizationsOrganizationDatabasesNameRegionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetOrganizationsOrganizationDatabasesNameRegionsUnauthorized struct {
}

// IsSuccess returns true when this get organizations organization databases name regions unauthorized response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization databases name regions unauthorized response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases name regions unauthorized response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization databases name regions unauthorized response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization databases name regions unauthorized response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesNameRegionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get organizations organization databases name regions unauthorized response
func (o *GetOrganizationsOrganizationDatabasesNameRegionsUnauthorized) Code() int {
	return 401
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{name}/regions][%d] getOrganizationsOrganizationDatabasesNameRegionsUnauthorized ", 401)
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{name}/regions][%d] getOrganizationsOrganizationDatabasesNameRegionsUnauthorized ", 401)
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationDatabasesNameRegionsForbidden creates a GetOrganizationsOrganizationDatabasesNameRegionsForbidden with default headers values
func NewGetOrganizationsOrganizationDatabasesNameRegionsForbidden() *GetOrganizationsOrganizationDatabasesNameRegionsForbidden {
	return &GetOrganizationsOrganizationDatabasesNameRegionsForbidden{}
}

/*
GetOrganizationsOrganizationDatabasesNameRegionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOrganizationsOrganizationDatabasesNameRegionsForbidden struct {
}

// IsSuccess returns true when this get organizations organization databases name regions forbidden response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization databases name regions forbidden response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases name regions forbidden response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization databases name regions forbidden response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization databases name regions forbidden response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesNameRegionsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get organizations organization databases name regions forbidden response
func (o *GetOrganizationsOrganizationDatabasesNameRegionsForbidden) Code() int {
	return 403
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsForbidden) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{name}/regions][%d] getOrganizationsOrganizationDatabasesNameRegionsForbidden ", 403)
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsForbidden) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{name}/regions][%d] getOrganizationsOrganizationDatabasesNameRegionsForbidden ", 403)
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationDatabasesNameRegionsNotFound creates a GetOrganizationsOrganizationDatabasesNameRegionsNotFound with default headers values
func NewGetOrganizationsOrganizationDatabasesNameRegionsNotFound() *GetOrganizationsOrganizationDatabasesNameRegionsNotFound {
	return &GetOrganizationsOrganizationDatabasesNameRegionsNotFound{}
}

/*
GetOrganizationsOrganizationDatabasesNameRegionsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOrganizationsOrganizationDatabasesNameRegionsNotFound struct {
}

// IsSuccess returns true when this get organizations organization databases name regions not found response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization databases name regions not found response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases name regions not found response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization databases name regions not found response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization databases name regions not found response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesNameRegionsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get organizations organization databases name regions not found response
func (o *GetOrganizationsOrganizationDatabasesNameRegionsNotFound) Code() int {
	return 404
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsNotFound) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{name}/regions][%d] getOrganizationsOrganizationDatabasesNameRegionsNotFound ", 404)
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsNotFound) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{name}/regions][%d] getOrganizationsOrganizationDatabasesNameRegionsNotFound ", 404)
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationDatabasesNameRegionsInternalServerError creates a GetOrganizationsOrganizationDatabasesNameRegionsInternalServerError with default headers values
func NewGetOrganizationsOrganizationDatabasesNameRegionsInternalServerError() *GetOrganizationsOrganizationDatabasesNameRegionsInternalServerError {
	return &GetOrganizationsOrganizationDatabasesNameRegionsInternalServerError{}
}

/*
GetOrganizationsOrganizationDatabasesNameRegionsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOrganizationsOrganizationDatabasesNameRegionsInternalServerError struct {
}

// IsSuccess returns true when this get organizations organization databases name regions internal server error response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization databases name regions internal server error response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases name regions internal server error response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations organization databases name regions internal server error response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesNameRegionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get organizations organization databases name regions internal server error response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesNameRegionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get organizations organization databases name regions internal server error response
func (o *GetOrganizationsOrganizationDatabasesNameRegionsInternalServerError) Code() int {
	return 500
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{name}/regions][%d] getOrganizationsOrganizationDatabasesNameRegionsInternalServerError ", 500)
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{name}/regions][%d] getOrganizationsOrganizationDatabasesNameRegionsInternalServerError ", 500)
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
GetOrganizationsOrganizationDatabasesNameRegionsOKBody get organizations organization databases name regions o k body
swagger:model GetOrganizationsOrganizationDatabasesNameRegionsOKBody
*/
type GetOrganizationsOrganizationDatabasesNameRegionsOKBody struct {

	// data
	// Required: true
	Data []*GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0 `json:"data"`
}

// Validate validates this get organizations organization databases name regions o k body
func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getOrganizationsOrganizationDatabasesNameRegionsOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOrganizationsOrganizationDatabasesNameRegionsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOrganizationsOrganizationDatabasesNameRegionsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get organizations organization databases name regions o k body based on the context it is used
func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {

			if swag.IsZero(o.Data[i]) { // not required
				return nil
			}

			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOrganizationsOrganizationDatabasesNameRegionsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOrganizationsOrganizationDatabasesNameRegionsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBody) UnmarshalBinary(b []byte) error {
	var res GetOrganizationsOrganizationDatabasesNameRegionsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0 get organizations organization databases name regions o k body data items0
swagger:model GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0
*/
type GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0 struct {

	// Name of the region
	// Required: true
	DisplayName *string `json:"display_name"`

	// Whether or not the region is currently active
	// Required: true
	Enabled *bool `json:"enabled"`

	// The ID of the region
	// Required: true
	ID *string `json:"id"`

	// Location of the region
	// Required: true
	Location *string `json:"location"`

	// Provider for the region (ex. AWS)
	// Required: true
	Provider *string `json:"provider"`

	// Public IP addresses for the region
	// Required: true
	PublicIPAddresses []string `json:"public_ip_addresses"`

	// The slug of the region
	// Required: true
	Slug *string `json:"slug"`
}

// Validate validates this get organizations organization databases name regions o k body data items0
func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProvider(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePublicIPAddresses(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSlug(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("display_name", "body", o.DisplayName); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0) validateEnabled(formats strfmt.Registry) error {

	if err := validate.Required("enabled", "body", o.Enabled); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0) validateLocation(formats strfmt.Registry) error {

	if err := validate.Required("location", "body", o.Location); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0) validateProvider(formats strfmt.Registry) error {

	if err := validate.Required("provider", "body", o.Provider); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0) validatePublicIPAddresses(formats strfmt.Registry) error {

	if err := validate.Required("public_ip_addresses", "body", o.PublicIPAddresses); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0) validateSlug(formats strfmt.Registry) error {

	if err := validate.Required("slug", "body", o.Slug); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get organizations organization databases name regions o k body data items0 based on context it is used
func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res GetOrganizationsOrganizationDatabasesNameRegionsOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
