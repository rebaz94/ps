// Code generated by go-swagger; DO NOT EDIT.

package database_branch_passwords

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams creates a new GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams() *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams {
	return &GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParamsWithTimeout creates a new GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams object
// with the ability to set a timeout on a request.
func NewGetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParamsWithTimeout(timeout time.Duration) *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams {
	return &GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams{
		timeout: timeout,
	}
}

// NewGetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParamsWithContext creates a new GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams object
// with the ability to set a context for a request.
func NewGetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParamsWithContext(ctx context.Context) *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams {
	return &GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams{
		Context: ctx,
	}
}

// NewGetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParamsWithHTTPClient creates a new GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParamsWithHTTPClient(client *http.Client) *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams {
	return &GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams{
		HTTPClient: client,
	}
}

/*
GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams contains all the parameters to send to the API endpoint

	for the get organizations organization databases database branches branch passwords id operation.

	Typically these are written to a http.Request.
*/
type GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams struct {

	/* Branch.

	   The name of the branch the password belongs to
	*/
	Branch string

	/* Database.

	   The name of the database the password belongs to
	*/
	Database string

	/* ID.

	   The ID of the password
	*/
	ID string

	/* Organization.

	   The name of the organization the password belongs to
	*/
	Organization string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get organizations organization databases database branches branch passwords id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) WithDefaults() *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get organizations organization databases database branches branch passwords id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get organizations organization databases database branches branch passwords id params
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) WithTimeout(timeout time.Duration) *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get organizations organization databases database branches branch passwords id params
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get organizations organization databases database branches branch passwords id params
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) WithContext(ctx context.Context) *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get organizations organization databases database branches branch passwords id params
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get organizations organization databases database branches branch passwords id params
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) WithHTTPClient(client *http.Client) *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get organizations organization databases database branches branch passwords id params
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBranch adds the branch to the get organizations organization databases database branches branch passwords id params
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) WithBranch(branch string) *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams {
	o.SetBranch(branch)
	return o
}

// SetBranch adds the branch to the get organizations organization databases database branches branch passwords id params
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) SetBranch(branch string) {
	o.Branch = branch
}

// WithDatabase adds the database to the get organizations organization databases database branches branch passwords id params
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) WithDatabase(database string) *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams {
	o.SetDatabase(database)
	return o
}

// SetDatabase adds the database to the get organizations organization databases database branches branch passwords id params
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) SetDatabase(database string) {
	o.Database = database
}

// WithID adds the id to the get organizations organization databases database branches branch passwords id params
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) WithID(id string) *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get organizations organization databases database branches branch passwords id params
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) SetID(id string) {
	o.ID = id
}

// WithOrganization adds the organization to the get organizations organization databases database branches branch passwords id params
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) WithOrganization(organization string) *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the get organizations organization databases database branches branch passwords id params
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchPasswordsIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param branch
	if err := r.SetPathParam("branch", o.Branch); err != nil {
		return err
	}

	// path param database
	if err := r.SetPathParam("database", o.Database); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
