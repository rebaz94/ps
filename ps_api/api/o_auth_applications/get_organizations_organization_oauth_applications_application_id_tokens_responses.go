// Code generated by go-swagger; DO NOT EDIT.

package o_auth_applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensReader is a Reader for the GetOrganizationsOrganizationOauthApplicationsApplicationIDTokens structure.
type GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /organizations/{organization}/oauth-applications/{application_id}/tokens] get_organizations_organization_oauth-applications_application_id_tokens", response, response.Code())
	}
}

// NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK creates a GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK() *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK {
	return &GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK{}
}

/*
GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK describes a response with status code 200, with default header values.

Returns a list of OAuth tokens issued on behalf of the OAuth application
*/
type GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK struct {
	Payload *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBody
}

// IsSuccess returns true when this get organizations organization oauth applications application Id tokens o k response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organizations organization oauth applications application Id tokens o k response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications application Id tokens o k response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations organization oauth applications application Id tokens o k response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization oauth applications application Id tokens o k response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get organizations organization oauth applications application Id tokens o k response
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK) Code() int {
	return 200
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}/tokens][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdTokensOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}/tokens][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdTokensOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK) GetPayload() *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBody {
	return o.Payload
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized creates a GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized() *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized {
	return &GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized{}
}

/*
GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized struct {
}

// IsSuccess returns true when this get organizations organization oauth applications application Id tokens unauthorized response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization oauth applications application Id tokens unauthorized response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications application Id tokens unauthorized response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization oauth applications application Id tokens unauthorized response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization oauth applications application Id tokens unauthorized response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get organizations organization oauth applications application Id tokens unauthorized response
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized) Code() int {
	return 401
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}/tokens][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdTokensUnauthorized ", 401)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}/tokens][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdTokensUnauthorized ", 401)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden creates a GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden() *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden {
	return &GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden{}
}

/*
GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden struct {
}

// IsSuccess returns true when this get organizations organization oauth applications application Id tokens forbidden response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization oauth applications application Id tokens forbidden response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications application Id tokens forbidden response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization oauth applications application Id tokens forbidden response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization oauth applications application Id tokens forbidden response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get organizations organization oauth applications application Id tokens forbidden response
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden) Code() int {
	return 403
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}/tokens][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdTokensForbidden ", 403)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}/tokens][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdTokensForbidden ", 403)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound creates a GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound() *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound {
	return &GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound{}
}

/*
GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound struct {
}

// IsSuccess returns true when this get organizations organization oauth applications application Id tokens not found response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization oauth applications application Id tokens not found response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications application Id tokens not found response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization oauth applications application Id tokens not found response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization oauth applications application Id tokens not found response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get organizations organization oauth applications application Id tokens not found response
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound) Code() int {
	return 404
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}/tokens][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdTokensNotFound ", 404)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}/tokens][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdTokensNotFound ", 404)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError creates a GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError() *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError {
	return &GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError{}
}

/*
GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError struct {
}

// IsSuccess returns true when this get organizations organization oauth applications application Id tokens internal server error response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization oauth applications application Id tokens internal server error response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications application Id tokens internal server error response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations organization oauth applications application Id tokens internal server error response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get organizations organization oauth applications application Id tokens internal server error response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get organizations organization oauth applications application Id tokens internal server error response
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError) Code() int {
	return 500
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}/tokens][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdTokensInternalServerError ", 500)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}/tokens][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdTokensInternalServerError ", 500)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBody get organizations organization oauth applications application ID tokens o k body
swagger:model GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBody
*/
type GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBody struct {

	// data
	// Required: true
	Data []*GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0 `json:"data"`
}

// Validate validates this get organizations organization oauth applications application ID tokens o k body
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getOrganizationsOrganizationOauthApplicationsApplicationIdTokensOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOrganizationsOrganizationOauthApplicationsApplicationIdTokensOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOrganizationsOrganizationOauthApplicationsApplicationIdTokensOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get organizations organization oauth applications application ID tokens o k body based on the context it is used
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {

			if swag.IsZero(o.Data[i]) { // not required
				return nil
			}

			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOrganizationsOrganizationOauthApplicationsApplicationIdTokensOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOrganizationsOrganizationOauthApplicationsApplicationIdTokensOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBody) UnmarshalBinary(b []byte) error {
	var res GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0 get organizations organization oauth applications application ID tokens o k body data items0
swagger:model GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0
*/
type GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0 struct {

	// The name of the actor on whose behalf the service token was created
	// Required: true
	ActorDisplayName *string `json:"actor_display_name"`

	// The ID of the actor on whose behalf the service token was created
	// Required: true
	ActorID *string `json:"actor_id"`

	// The type of the actor on whose behalf the service token was created
	// Required: true
	ActorType *string `json:"actor_type"`

	// The image source for the avatar of the service token
	// Required: true
	AvatarURL *string `json:"avatar_url"`

	// When the service token was created
	// Required: true
	CreatedAt *string `json:"created_at"`

	// The display name of the service token
	// Required: true
	DisplayName *string `json:"display_name"`

	// When the service token will expire
	// Required: true
	ExpiresAt *string `json:"expires_at"`

	// The ID of the service token
	// Required: true
	ID *string `json:"id"`

	// When the service token was last used
	// Required: true
	LastUsedAt *string `json:"last_used_at"`

	// The name of the service token
	// Required: true
	Name *string `json:"name"`

	// When the service token was last updated
	// Required: true
	UpdatedAt *string `json:"updated_at"`
}

// Validate validates this get organizations organization oauth applications application ID tokens o k body data items0
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActorDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateActorID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateActorType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAvatarURL(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpiresAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastUsedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) validateActorDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("actor_display_name", "body", o.ActorDisplayName); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) validateActorID(formats strfmt.Registry) error {

	if err := validate.Required("actor_id", "body", o.ActorID); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) validateActorType(formats strfmt.Registry) error {

	if err := validate.Required("actor_type", "body", o.ActorType); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) validateAvatarURL(formats strfmt.Registry) error {

	if err := validate.Required("avatar_url", "body", o.AvatarURL); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("created_at", "body", o.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("display_name", "body", o.DisplayName); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) validateExpiresAt(formats strfmt.Registry) error {

	if err := validate.Required("expires_at", "body", o.ExpiresAt); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) validateLastUsedAt(formats strfmt.Registry) error {

	if err := validate.Required("last_used_at", "body", o.LastUsedAt); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("updated_at", "body", o.UpdatedAt); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get organizations organization oauth applications application ID tokens o k body data items0 based on context it is used
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res GetOrganizationsOrganizationOauthApplicationsApplicationIDTokensOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
