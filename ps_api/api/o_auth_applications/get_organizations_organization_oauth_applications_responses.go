// Code generated by go-swagger; DO NOT EDIT.

package o_auth_applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetOrganizationsOrganizationOauthApplicationsReader is a Reader for the GetOrganizationsOrganizationOauthApplications structure.
type GetOrganizationsOrganizationOauthApplicationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationsOrganizationOauthApplicationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationsOrganizationOauthApplicationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetOrganizationsOrganizationOauthApplicationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrganizationsOrganizationOauthApplicationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrganizationsOrganizationOauthApplicationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrganizationsOrganizationOauthApplicationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /organizations/{organization}/oauth-applications] get_organizations_organization_oauth-applications", response, response.Code())
	}
}

// NewGetOrganizationsOrganizationOauthApplicationsOK creates a GetOrganizationsOrganizationOauthApplicationsOK with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsOK() *GetOrganizationsOrganizationOauthApplicationsOK {
	return &GetOrganizationsOrganizationOauthApplicationsOK{}
}

/*
GetOrganizationsOrganizationOauthApplicationsOK describes a response with status code 200, with default header values.

Returns a list of the organization's oauth applications
*/
type GetOrganizationsOrganizationOauthApplicationsOK struct {
	Payload *GetOrganizationsOrganizationOauthApplicationsOKBody
}

// IsSuccess returns true when this get organizations organization oauth applications o k response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organizations organization oauth applications o k response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications o k response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations organization oauth applications o k response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization oauth applications o k response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get organizations organization oauth applications o k response
func (o *GetOrganizationsOrganizationOauthApplicationsOK) Code() int {
	return 200
}

func (o *GetOrganizationsOrganizationOauthApplicationsOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications][%d] getOrganizationsOrganizationOauthApplicationsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsOrganizationOauthApplicationsOK) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications][%d] getOrganizationsOrganizationOauthApplicationsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsOrganizationOauthApplicationsOK) GetPayload() *GetOrganizationsOrganizationOauthApplicationsOKBody {
	return o.Payload
}

func (o *GetOrganizationsOrganizationOauthApplicationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetOrganizationsOrganizationOauthApplicationsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsOrganizationOauthApplicationsUnauthorized creates a GetOrganizationsOrganizationOauthApplicationsUnauthorized with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsUnauthorized() *GetOrganizationsOrganizationOauthApplicationsUnauthorized {
	return &GetOrganizationsOrganizationOauthApplicationsUnauthorized{}
}

/*
GetOrganizationsOrganizationOauthApplicationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetOrganizationsOrganizationOauthApplicationsUnauthorized struct {
}

// IsSuccess returns true when this get organizations organization oauth applications unauthorized response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization oauth applications unauthorized response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications unauthorized response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization oauth applications unauthorized response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization oauth applications unauthorized response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get organizations organization oauth applications unauthorized response
func (o *GetOrganizationsOrganizationOauthApplicationsUnauthorized) Code() int {
	return 401
}

func (o *GetOrganizationsOrganizationOauthApplicationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications][%d] getOrganizationsOrganizationOauthApplicationsUnauthorized ", 401)
}

func (o *GetOrganizationsOrganizationOauthApplicationsUnauthorized) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications][%d] getOrganizationsOrganizationOauthApplicationsUnauthorized ", 401)
}

func (o *GetOrganizationsOrganizationOauthApplicationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationOauthApplicationsForbidden creates a GetOrganizationsOrganizationOauthApplicationsForbidden with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsForbidden() *GetOrganizationsOrganizationOauthApplicationsForbidden {
	return &GetOrganizationsOrganizationOauthApplicationsForbidden{}
}

/*
GetOrganizationsOrganizationOauthApplicationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOrganizationsOrganizationOauthApplicationsForbidden struct {
}

// IsSuccess returns true when this get organizations organization oauth applications forbidden response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization oauth applications forbidden response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications forbidden response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization oauth applications forbidden response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization oauth applications forbidden response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get organizations organization oauth applications forbidden response
func (o *GetOrganizationsOrganizationOauthApplicationsForbidden) Code() int {
	return 403
}

func (o *GetOrganizationsOrganizationOauthApplicationsForbidden) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications][%d] getOrganizationsOrganizationOauthApplicationsForbidden ", 403)
}

func (o *GetOrganizationsOrganizationOauthApplicationsForbidden) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications][%d] getOrganizationsOrganizationOauthApplicationsForbidden ", 403)
}

func (o *GetOrganizationsOrganizationOauthApplicationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationOauthApplicationsNotFound creates a GetOrganizationsOrganizationOauthApplicationsNotFound with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsNotFound() *GetOrganizationsOrganizationOauthApplicationsNotFound {
	return &GetOrganizationsOrganizationOauthApplicationsNotFound{}
}

/*
GetOrganizationsOrganizationOauthApplicationsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOrganizationsOrganizationOauthApplicationsNotFound struct {
}

// IsSuccess returns true when this get organizations organization oauth applications not found response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization oauth applications not found response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications not found response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization oauth applications not found response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization oauth applications not found response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get organizations organization oauth applications not found response
func (o *GetOrganizationsOrganizationOauthApplicationsNotFound) Code() int {
	return 404
}

func (o *GetOrganizationsOrganizationOauthApplicationsNotFound) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications][%d] getOrganizationsOrganizationOauthApplicationsNotFound ", 404)
}

func (o *GetOrganizationsOrganizationOauthApplicationsNotFound) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications][%d] getOrganizationsOrganizationOauthApplicationsNotFound ", 404)
}

func (o *GetOrganizationsOrganizationOauthApplicationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationOauthApplicationsInternalServerError creates a GetOrganizationsOrganizationOauthApplicationsInternalServerError with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsInternalServerError() *GetOrganizationsOrganizationOauthApplicationsInternalServerError {
	return &GetOrganizationsOrganizationOauthApplicationsInternalServerError{}
}

/*
GetOrganizationsOrganizationOauthApplicationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOrganizationsOrganizationOauthApplicationsInternalServerError struct {
}

// IsSuccess returns true when this get organizations organization oauth applications internal server error response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization oauth applications internal server error response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications internal server error response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations organization oauth applications internal server error response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get organizations organization oauth applications internal server error response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get organizations organization oauth applications internal server error response
func (o *GetOrganizationsOrganizationOauthApplicationsInternalServerError) Code() int {
	return 500
}

func (o *GetOrganizationsOrganizationOauthApplicationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications][%d] getOrganizationsOrganizationOauthApplicationsInternalServerError ", 500)
}

func (o *GetOrganizationsOrganizationOauthApplicationsInternalServerError) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications][%d] getOrganizationsOrganizationOauthApplicationsInternalServerError ", 500)
}

func (o *GetOrganizationsOrganizationOauthApplicationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
GetOrganizationsOrganizationOauthApplicationsOKBody get organizations organization oauth applications o k body
swagger:model GetOrganizationsOrganizationOauthApplicationsOKBody
*/
type GetOrganizationsOrganizationOauthApplicationsOKBody struct {

	// data
	// Required: true
	Data []*GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0 `json:"data"`
}

// Validate validates this get organizations organization oauth applications o k body
func (o *GetOrganizationsOrganizationOauthApplicationsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getOrganizationsOrganizationOauthApplicationsOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOrganizationsOrganizationOauthApplicationsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOrganizationsOrganizationOauthApplicationsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get organizations organization oauth applications o k body based on the context it is used
func (o *GetOrganizationsOrganizationOauthApplicationsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {

			if swag.IsZero(o.Data[i]) { // not required
				return nil
			}

			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOrganizationsOrganizationOauthApplicationsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOrganizationsOrganizationOauthApplicationsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationsOrganizationOauthApplicationsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationsOrganizationOauthApplicationsOKBody) UnmarshalBinary(b []byte) error {
	var res GetOrganizationsOrganizationOauthApplicationsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0 get organizations organization oauth applications o k body data items0
swagger:model GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0
*/
type GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0 struct {

	// The image source for the OAuth application's avatar
	Avatar string `json:"avatar,omitempty"`

	// The OAuth application's unique client id
	// Required: true
	ClientID *string `json:"client_id"`

	// When the OAuth application was created
	// Required: true
	CreatedAt *string `json:"created_at"`

	// The domain of the OAuth application. Used for verification of a valid redirect uri
	// Required: true
	Domain *string `json:"domain"`

	// The ID of the OAuth application
	// Required: true
	ID *string `json:"id"`

	// The name of the OAuth application
	// Required: true
	Name *string `json:"name"`

	// The redirect URI of the OAuth application
	// Required: true
	RedirectURI *string `json:"redirect_uri"`

	// The scopes that the OAuth application requires on a user's accout
	// Required: true
	Scopes []string `json:"scopes"`

	// The number of tokens issued by the OAuth application
	// Required: true
	Tokens *float64 `json:"tokens"`

	// When the OAuth application was last updated
	// Required: true
	UpdatedAt *string `json:"updated_at"`
}

// Validate validates this get organizations organization oauth applications o k body data items0
func (o *GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateClientID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDomain(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRedirectURI(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateScopes(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTokens(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0) validateClientID(formats strfmt.Registry) error {

	if err := validate.Required("client_id", "body", o.ClientID); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("created_at", "body", o.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0) validateDomain(formats strfmt.Registry) error {

	if err := validate.Required("domain", "body", o.Domain); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0) validateRedirectURI(formats strfmt.Registry) error {

	if err := validate.Required("redirect_uri", "body", o.RedirectURI); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0) validateScopes(formats strfmt.Registry) error {

	if err := validate.Required("scopes", "body", o.Scopes); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0) validateTokens(formats strfmt.Registry) error {

	if err := validate.Required("tokens", "body", o.Tokens); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("updated_at", "body", o.UpdatedAt); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get organizations organization oauth applications o k body data items0 based on context it is used
func (o *GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res GetOrganizationsOrganizationOauthApplicationsOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
