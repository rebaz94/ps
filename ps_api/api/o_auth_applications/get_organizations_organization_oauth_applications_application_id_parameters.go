// Code generated by go-swagger; DO NOT EDIT.

package o_auth_applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetOrganizationsOrganizationOauthApplicationsApplicationIDParams creates a new GetOrganizationsOrganizationOauthApplicationsApplicationIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrganizationsOrganizationOauthApplicationsApplicationIDParams() *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams {
	return &GetOrganizationsOrganizationOauthApplicationsApplicationIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrganizationsOrganizationOauthApplicationsApplicationIDParamsWithTimeout creates a new GetOrganizationsOrganizationOauthApplicationsApplicationIDParams object
// with the ability to set a timeout on a request.
func NewGetOrganizationsOrganizationOauthApplicationsApplicationIDParamsWithTimeout(timeout time.Duration) *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams {
	return &GetOrganizationsOrganizationOauthApplicationsApplicationIDParams{
		timeout: timeout,
	}
}

// NewGetOrganizationsOrganizationOauthApplicationsApplicationIDParamsWithContext creates a new GetOrganizationsOrganizationOauthApplicationsApplicationIDParams object
// with the ability to set a context for a request.
func NewGetOrganizationsOrganizationOauthApplicationsApplicationIDParamsWithContext(ctx context.Context) *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams {
	return &GetOrganizationsOrganizationOauthApplicationsApplicationIDParams{
		Context: ctx,
	}
}

// NewGetOrganizationsOrganizationOauthApplicationsApplicationIDParamsWithHTTPClient creates a new GetOrganizationsOrganizationOauthApplicationsApplicationIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrganizationsOrganizationOauthApplicationsApplicationIDParamsWithHTTPClient(client *http.Client) *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams {
	return &GetOrganizationsOrganizationOauthApplicationsApplicationIDParams{
		HTTPClient: client,
	}
}

/*
GetOrganizationsOrganizationOauthApplicationsApplicationIDParams contains all the parameters to send to the API endpoint

	for the get organizations organization oauth applications application id operation.

	Typically these are written to a http.Request.
*/
type GetOrganizationsOrganizationOauthApplicationsApplicationIDParams struct {

	/* ApplicationID.

	   The ID of the OAuth application
	*/
	ApplicationID string

	/* Organization.

	   The name of the organization the OAuth application belongs to
	*/
	Organization string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get organizations organization oauth applications application id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams) WithDefaults() *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get organizations organization oauth applications application id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get organizations organization oauth applications application id params
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams) WithTimeout(timeout time.Duration) *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get organizations organization oauth applications application id params
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get organizations organization oauth applications application id params
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams) WithContext(ctx context.Context) *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get organizations organization oauth applications application id params
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get organizations organization oauth applications application id params
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams) WithHTTPClient(client *http.Client) *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get organizations organization oauth applications application id params
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApplicationID adds the applicationID to the get organizations organization oauth applications application id params
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams) WithApplicationID(applicationID string) *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams {
	o.SetApplicationID(applicationID)
	return o
}

// SetApplicationID adds the applicationId to the get organizations organization oauth applications application id params
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams) SetApplicationID(applicationID string) {
	o.ApplicationID = applicationID
}

// WithOrganization adds the organization to the get organizations organization oauth applications application id params
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams) WithOrganization(organization string) *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the get organizations organization oauth applications application id params
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param application_id
	if err := r.SetPathParam("application_id", o.ApplicationID); err != nil {
		return err
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
