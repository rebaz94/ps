// Code generated by go-swagger; DO NOT EDIT.

package o_auth_applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetOrganizationsOrganizationOauthApplicationsApplicationIDReader is a Reader for the GetOrganizationsOrganizationOauthApplicationsApplicationID structure.
type GetOrganizationsOrganizationOauthApplicationsApplicationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationsOrganizationOauthApplicationsApplicationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /organizations/{organization}/oauth-applications/{application_id}] get_organizations_organization_oauth-applications_application_id", response, response.Code())
	}
}

// NewGetOrganizationsOrganizationOauthApplicationsApplicationIDOK creates a GetOrganizationsOrganizationOauthApplicationsApplicationIDOK with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsApplicationIDOK() *GetOrganizationsOrganizationOauthApplicationsApplicationIDOK {
	return &GetOrganizationsOrganizationOauthApplicationsApplicationIDOK{}
}

/*
GetOrganizationsOrganizationOauthApplicationsApplicationIDOK describes a response with status code 200, with default header values.

Returns information abuot an OAuth application
*/
type GetOrganizationsOrganizationOauthApplicationsApplicationIDOK struct {
	Payload *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody
}

// IsSuccess returns true when this get organizations organization oauth applications application Id o k response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organizations organization oauth applications application Id o k response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications application Id o k response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations organization oauth applications application Id o k response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization oauth applications application Id o k response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get organizations organization oauth applications application Id o k response
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOK) Code() int {
	return 200
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOK) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOK) GetPayload() *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody {
	return o.Payload
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized creates a GetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized() *GetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized {
	return &GetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized{}
}

/*
GetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized struct {
}

// IsSuccess returns true when this get organizations organization oauth applications application Id unauthorized response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization oauth applications application Id unauthorized response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications application Id unauthorized response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization oauth applications application Id unauthorized response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization oauth applications application Id unauthorized response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get organizations organization oauth applications application Id unauthorized response
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized) Code() int {
	return 401
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdUnauthorized ", 401)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdUnauthorized ", 401)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden creates a GetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden() *GetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden {
	return &GetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden{}
}

/*
GetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden struct {
}

// IsSuccess returns true when this get organizations organization oauth applications application Id forbidden response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization oauth applications application Id forbidden response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications application Id forbidden response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization oauth applications application Id forbidden response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization oauth applications application Id forbidden response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get organizations organization oauth applications application Id forbidden response
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden) Code() int {
	return 403
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdForbidden ", 403)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdForbidden ", 403)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound creates a GetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound() *GetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound {
	return &GetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound{}
}

/*
GetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound struct {
}

// IsSuccess returns true when this get organizations organization oauth applications application Id not found response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization oauth applications application Id not found response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications application Id not found response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization oauth applications application Id not found response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization oauth applications application Id not found response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get organizations organization oauth applications application Id not found response
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound) Code() int {
	return 404
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdNotFound ", 404)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdNotFound ", 404)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError creates a GetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError with default headers values
func NewGetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError() *GetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError {
	return &GetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError{}
}

/*
GetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError struct {
}

// IsSuccess returns true when this get organizations organization oauth applications application Id internal server error response has a 2xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization oauth applications application Id internal server error response has a 3xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization oauth applications application Id internal server error response has a 4xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations organization oauth applications application Id internal server error response has a 5xx status code
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get organizations organization oauth applications application Id internal server error response a status code equal to that given
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get organizations organization oauth applications application Id internal server error response
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError) Code() int {
	return 500
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdInternalServerError ", 500)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/oauth-applications/{application_id}][%d] getOrganizationsOrganizationOauthApplicationsApplicationIdInternalServerError ", 500)
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody get organizations organization oauth applications application ID o k body
swagger:model GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody
*/
type GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody struct {

	// The image source for the OAuth application's avatar
	Avatar string `json:"avatar,omitempty"`

	// The OAuth application's unique client id
	// Required: true
	ClientID *string `json:"client_id"`

	// When the OAuth application was created
	// Required: true
	CreatedAt *string `json:"created_at"`

	// The domain of the OAuth application. Used for verification of a valid redirect uri
	// Required: true
	Domain *string `json:"domain"`

	// The ID of the OAuth application
	// Required: true
	ID *string `json:"id"`

	// The name of the OAuth application
	// Required: true
	Name *string `json:"name"`

	// The redirect URI of the OAuth application
	// Required: true
	RedirectURI *string `json:"redirect_uri"`

	// The scopes that the OAuth application requires on a user's accout
	// Required: true
	Scopes []string `json:"scopes"`

	// The number of tokens issued by the OAuth application
	// Required: true
	Tokens *float64 `json:"tokens"`

	// When the OAuth application was last updated
	// Required: true
	UpdatedAt *string `json:"updated_at"`
}

// Validate validates this get organizations organization oauth applications application ID o k body
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateClientID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDomain(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRedirectURI(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateScopes(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTokens(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody) validateClientID(formats strfmt.Registry) error {

	if err := validate.Required("getOrganizationsOrganizationOauthApplicationsApplicationIdOK"+"."+"client_id", "body", o.ClientID); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("getOrganizationsOrganizationOauthApplicationsApplicationIdOK"+"."+"created_at", "body", o.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody) validateDomain(formats strfmt.Registry) error {

	if err := validate.Required("getOrganizationsOrganizationOauthApplicationsApplicationIdOK"+"."+"domain", "body", o.Domain); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("getOrganizationsOrganizationOauthApplicationsApplicationIdOK"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("getOrganizationsOrganizationOauthApplicationsApplicationIdOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody) validateRedirectURI(formats strfmt.Registry) error {

	if err := validate.Required("getOrganizationsOrganizationOauthApplicationsApplicationIdOK"+"."+"redirect_uri", "body", o.RedirectURI); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody) validateScopes(formats strfmt.Registry) error {

	if err := validate.Required("getOrganizationsOrganizationOauthApplicationsApplicationIdOK"+"."+"scopes", "body", o.Scopes); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody) validateTokens(formats strfmt.Registry) error {

	if err := validate.Required("getOrganizationsOrganizationOauthApplicationsApplicationIdOK"+"."+"tokens", "body", o.Tokens); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("getOrganizationsOrganizationOauthApplicationsApplicationIdOK"+"."+"updated_at", "body", o.UpdatedAt); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get organizations organization oauth applications application ID o k body based on context it is used
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetOrganizationsOrganizationOauthApplicationsApplicationIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
