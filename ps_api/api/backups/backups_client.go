// Code generated by go-swagger; DO NOT EDIT.

package backups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new backups API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for backups API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsID(params *DeleteOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsIDNoContent, error)

	GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackups(params *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsOK, error)

	GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsID(params *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsIDOK, error)

	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackups(params *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
	DeleteOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsID deletes a backup

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`delete_backups`, `delete_production_branch_backups`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `delete_backups`, `delete_production_branch_backups` |
| Database | `delete_backups`, `delete_production_branch_backups` |
| Branch | `delete_backups` |
*/
func (a *Client) DeleteOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsID(params *DeleteOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsIDNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "delete_organizations_organization_databases_database_branches_branch_backups_id",
		Method:             "DELETE",
		PathPattern:        "/organizations/{organization}/databases/{database}/branches/{branch}/backups/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsIDNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for delete_organizations_organization_databases_database_branches_branch_backups_id: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackups lists backups

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_backups`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `read_backups` |
| Database | `read_backups` |
| Branch | `read_backups` |
*/
func (a *Client) GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackups(params *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "get_organizations_organization_databases_database_branches_branch_backups",
		Method:             "GET",
		PathPattern:        "/organizations/{organization}/databases/{database}/branches/{branch}/backups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_organizations_organization_databases_database_branches_branch_backups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsID gets a backup

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_backups`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `read_backups` |
| Database | `read_backups` |
| Branch | `read_backups` |
*/
func (a *Client) GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsID(params *GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "get_organizations_organization_databases_database_branches_branch_backups_id",
		Method:             "GET",
		PathPattern:        "/organizations/{organization}/databases/{database}/branches/{branch}/backups/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_organizations_organization_databases_database_branches_branch_backups_id: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackups creates a backup

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`write_backups`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `write_backups` |
| Database | `write_backups` |
| Branch | `write_backups` |
*/
func (a *Client) PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackups(params *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "post_organizations_organization_databases_database_branches_branch_backups",
		Method:             "POST",
		PathPattern:        "/organizations/{organization}/databases/{database}/branches/{branch}/backups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for post_organizations_organization_databases_database_branches_branch_backups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
