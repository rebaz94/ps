// Code generated by go-swagger; DO NOT EDIT.

package backups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsReader is a Reader for the PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackups structure.
type PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /organizations/{organization}/databases/{database}/branches/{branch}/backups] post_organizations_organization_databases_database_branches_branch_backups", response, response.Code())
	}
}

// NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated creates a PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated with default headers values
func NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated() *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated {
	return &PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated{}
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated describes a response with status code 201, with default header values.

Returns the created database branch backup
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated struct {
	Payload *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody
}

// IsSuccess returns true when this post organizations organization databases database branches branch backups created response has a 2xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post organizations organization databases database branches branch backups created response has a 3xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post organizations organization databases database branches branch backups created response has a 4xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post organizations organization databases database branches branch backups created response has a 5xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post organizations organization databases database branches branch backups created response a status code equal to that given
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post organizations organization databases database branches branch backups created response
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated) Code() int {
	return 201
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{branch}/backups][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated  %+v", 201, o.Payload)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated) String() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{branch}/backups][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated  %+v", 201, o.Payload)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated) GetPayload() *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody {
	return o.Payload
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized creates a PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized with default headers values
func NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized() *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized {
	return &PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized{}
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized struct {
}

// IsSuccess returns true when this post organizations organization databases database branches branch backups unauthorized response has a 2xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post organizations organization databases database branches branch backups unauthorized response has a 3xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post organizations organization databases database branches branch backups unauthorized response has a 4xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post organizations organization databases database branches branch backups unauthorized response has a 5xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post organizations organization databases database branches branch backups unauthorized response a status code equal to that given
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post organizations organization databases database branches branch backups unauthorized response
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized) Code() int {
	return 401
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{branch}/backups][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized ", 401)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized) String() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{branch}/backups][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized ", 401)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden creates a PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden with default headers values
func NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden() *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden {
	return &PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden{}
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden struct {
}

// IsSuccess returns true when this post organizations organization databases database branches branch backups forbidden response has a 2xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post organizations organization databases database branches branch backups forbidden response has a 3xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post organizations organization databases database branches branch backups forbidden response has a 4xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post organizations organization databases database branches branch backups forbidden response has a 5xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post organizations organization databases database branches branch backups forbidden response a status code equal to that given
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post organizations organization databases database branches branch backups forbidden response
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden) Code() int {
	return 403
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{branch}/backups][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden ", 403)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden) String() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{branch}/backups][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden ", 403)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound creates a PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound with default headers values
func NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound() *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound {
	return &PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound{}
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound struct {
}

// IsSuccess returns true when this post organizations organization databases database branches branch backups not found response has a 2xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post organizations organization databases database branches branch backups not found response has a 3xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post organizations organization databases database branches branch backups not found response has a 4xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post organizations organization databases database branches branch backups not found response has a 5xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post organizations organization databases database branches branch backups not found response a status code equal to that given
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post organizations organization databases database branches branch backups not found response
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound) Code() int {
	return 404
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{branch}/backups][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound ", 404)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound) String() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{branch}/backups][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound ", 404)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError creates a PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError with default headers values
func NewPostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError() *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError {
	return &PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError{}
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError struct {
}

// IsSuccess returns true when this post organizations organization databases database branches branch backups internal server error response has a 2xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post organizations organization databases database branches branch backups internal server error response has a 3xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post organizations organization databases database branches branch backups internal server error response has a 4xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post organizations organization databases database branches branch backups internal server error response has a 5xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post organizations organization databases database branches branch backups internal server error response a status code equal to that given
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post organizations organization databases database branches branch backups internal server error response
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError) Code() int {
	return 500
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{branch}/backups][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError ", 500)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError) String() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{branch}/backups][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError ", 500)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBody post organizations organization databases database branches branch backups body
swagger:model PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBody
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBody struct {

	// Name for the backup
	Name string `json:"name,omitempty"`

	// Unit for the retention period of the backup
	// Enum: [hour day week month year]
	RetentionUnit string `json:"retention_unit,omitempty"`

	// Value between `1`` and `1000`` for the retention period of the backup (i.e retention_value `6`` and retention_unit `hour` means 6 hours)
	RetentionValue float64 `json:"retention_value,omitempty"`
}

// Validate validates this post organizations organization databases database branches branch backups body
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRetentionUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBodyTypeRetentionUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["hour","day","week","month","year"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBodyTypeRetentionUnitPropEnum = append(postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBodyTypeRetentionUnitPropEnum, v)
	}
}

const (

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBodyRetentionUnitHour captures enum value "hour"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBodyRetentionUnitHour string = "hour"

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBodyRetentionUnitDay captures enum value "day"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBodyRetentionUnitDay string = "day"

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBodyRetentionUnitWeek captures enum value "week"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBodyRetentionUnitWeek string = "week"

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBodyRetentionUnitMonth captures enum value "month"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBodyRetentionUnitMonth string = "month"

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBodyRetentionUnitYear captures enum value "year"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBodyRetentionUnitYear string = "year"
)

// prop value enum
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBody) validateRetentionUnitEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBodyTypeRetentionUnitPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBody) validateRetentionUnit(formats strfmt.Registry) error {
	if swag.IsZero(o.RetentionUnit) { // not required
		return nil
	}

	// value enum
	if err := o.validateRetentionUnitEnum("body"+"."+"retention_unit", "body", o.RetentionUnit); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post organizations organization databases database branches branch backups body based on context it is used
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBody) UnmarshalBinary(b []byte) error {
	var res PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody post organizations organization databases database branches branch backups created body
swagger:model PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody struct {

	// actor
	Actor *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyActor `json:"actor,omitempty"`

	// backup policy
	BackupPolicy *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy `json:"backup_policy,omitempty"`

	// When the backup was created
	// Required: true
	CreatedAt *string `json:"created_at"`

	// The estimated storage cost of the backup
	// Required: true
	EstimatedStorageCost *float64 `json:"estimated_storage_cost"`

	// The ID of the backup
	// Required: true
	ID *string `json:"id"`

	// The name of the backup
	// Required: true
	Name *string `json:"name"`

	// Whether or not the backup policy is required
	// Required: true
	Required *bool `json:"required"`

	// Branches that have been restored with this backup
	RestoredBranches []string `json:"restored_branches"`

	// schema snapshot
	// Required: true
	SchemaSnapshot *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodySchemaSnapshot `json:"schema_snapshot"`

	// The size of the backup
	// Required: true
	Size *float64 `json:"size"`

	// The current state of the backup
	// Required: true
	// Enum: [pending running success failed canceled ignored]
	State *string `json:"state"`

	// When the backup was last updated
	// Required: true
	UpdatedAt *string `json:"updated_at"`
}

// Validate validates this post organizations organization databases database branches branch backups created body
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActor(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBackupPolicy(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEstimatedStorageCost(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRequired(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSchemaSnapshot(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateState(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) validateActor(formats strfmt.Registry) error {
	if swag.IsZero(o.Actor) { // not required
		return nil
	}

	if o.Actor != nil {
		if err := o.Actor.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated" + "." + "actor")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated" + "." + "actor")
			}
			return err
		}
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) validateBackupPolicy(formats strfmt.Registry) error {
	if swag.IsZero(o.BackupPolicy) { // not required
		return nil
	}

	if o.BackupPolicy != nil {
		if err := o.BackupPolicy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated" + "." + "backup_policy")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated" + "." + "backup_policy")
			}
			return err
		}
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"created_at", "body", o.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) validateEstimatedStorageCost(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"estimated_storage_cost", "body", o.EstimatedStorageCost); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) validateRequired(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"required", "body", o.Required); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) validateSchemaSnapshot(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"schema_snapshot", "body", o.SchemaSnapshot); err != nil {
		return err
	}

	if o.SchemaSnapshot != nil {
		if err := o.SchemaSnapshot.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated" + "." + "schema_snapshot")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated" + "." + "schema_snapshot")
			}
			return err
		}
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) validateSize(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"size", "body", o.Size); err != nil {
		return err
	}

	return nil
}

var postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["pending","running","success","failed","canceled","ignored"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyTypeStatePropEnum = append(postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyTypeStatePropEnum, v)
	}
}

const (

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyStatePending captures enum value "pending"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyStatePending string = "pending"

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyStateRunning captures enum value "running"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyStateRunning string = "running"

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyStateSuccess captures enum value "success"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyStateSuccess string = "success"

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyStateFailed captures enum value "failed"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyStateFailed string = "failed"

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyStateCanceled captures enum value "canceled"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyStateCanceled string = "canceled"

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyStateIgnored captures enum value "ignored"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyStateIgnored string = "ignored"
)

// prop value enum
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyTypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) validateState(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"state", "body", o.State); err != nil {
		return err
	}

	// value enum
	if err := o.validateStateEnum("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"state", "body", *o.State); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"updated_at", "body", o.UpdatedAt); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this post organizations organization databases database branches branch backups created body based on the context it is used
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateActor(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateBackupPolicy(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateSchemaSnapshot(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) contextValidateActor(ctx context.Context, formats strfmt.Registry) error {

	if o.Actor != nil {

		if swag.IsZero(o.Actor) { // not required
			return nil
		}

		if err := o.Actor.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated" + "." + "actor")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated" + "." + "actor")
			}
			return err
		}
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) contextValidateBackupPolicy(ctx context.Context, formats strfmt.Registry) error {

	if o.BackupPolicy != nil {

		if swag.IsZero(o.BackupPolicy) { // not required
			return nil
		}

		if err := o.BackupPolicy.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated" + "." + "backup_policy")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated" + "." + "backup_policy")
			}
			return err
		}
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) contextValidateSchemaSnapshot(ctx context.Context, formats strfmt.Registry) error {

	if o.SchemaSnapshot != nil {

		if err := o.SchemaSnapshot.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated" + "." + "schema_snapshot")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated" + "." + "schema_snapshot")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody) UnmarshalBinary(b []byte) error {
	var res PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyActor post organizations organization databases database branches branch backups created body actor
swagger:model PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyActor
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyActor struct {

	// The URL of the actor's avatar
	// Required: true
	AvatarURL *string `json:"avatar_url"`

	// The name of the actor
	// Required: true
	DisplayName *string `json:"display_name"`

	// The ID of the actor
	// Required: true
	ID *string `json:"id"`
}

// Validate validates this post organizations organization databases database branches branch backups created body actor
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyActor) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAvatarURL(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyActor) validateAvatarURL(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"actor"+"."+"avatar_url", "body", o.AvatarURL); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyActor) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"actor"+"."+"display_name", "body", o.DisplayName); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyActor) validateID(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"actor"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post organizations organization databases database branches branch backups created body actor based on context it is used
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyActor) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyActor) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyActor) UnmarshalBinary(b []byte) error {
	var res PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyActor
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy post organizations organization databases database branches branch backups created body backup policy
swagger:model PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy struct {

	// When the backup policy was created
	// Required: true
	CreatedAt *string `json:"created_at"`

	// The unit for the frequency of the backup policy
	// Required: true
	FrequencyUnit *string `json:"frequency_unit"`

	// A number value for the frequency of the backup policy
	// Required: true
	FrequencyValue *float64 `json:"frequency_value"`

	// The ID of the backup policy
	// Required: true
	ID *string `json:"id"`

	// When the backup was last run
	// Required: true
	LastRanAt *string `json:"last_ran_at"`

	// The name of the backup policy
	// Required: true
	Name *string `json:"name"`

	// When the backup will next run
	// Required: true
	NextRunAt *string `json:"next_run_at"`

	// The unit for the retention period of the backup policy
	// Required: true
	RetentionUnit *string `json:"retention_unit"`

	// A number value for the retention period of the backup policy
	// Required: true
	RetentionValue *float64 `json:"retention_value"`

	// Day of the week that the backup is scheduled
	// Required: true
	// Enum: [0..6]
	ScheduleDay *string `json:"schedule_day"`

	// Week of the month that the backup is scheduled
	// Required: true
	// Enum: [0..3]
	ScheduleWeek *string `json:"schedule_week"`

	// Whether the backup policy is for a production or development database, or for a database branch
	// Required: true
	// Enum: [production development branch]
	Target *string `json:"target"`

	// When the backup policy was last updated
	// Required: true
	UpdatedAt *string `json:"updated_at"`
}

// Validate validates this post organizations organization databases database branches branch backups created body backup policy
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFrequencyUnit(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFrequencyValue(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastRanAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNextRunAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRetentionUnit(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRetentionValue(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateScheduleDay(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateScheduleWeek(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTarget(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"created_at", "body", o.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateFrequencyUnit(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"frequency_unit", "body", o.FrequencyUnit); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateFrequencyValue(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"frequency_value", "body", o.FrequencyValue); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateID(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateLastRanAt(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"last_ran_at", "body", o.LastRanAt); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateName(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateNextRunAt(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"next_run_at", "body", o.NextRunAt); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateRetentionUnit(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"retention_unit", "body", o.RetentionUnit); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateRetentionValue(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"retention_value", "body", o.RetentionValue); err != nil {
		return err
	}

	return nil
}

var postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTypeScheduleDayPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["0..6"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTypeScheduleDayPropEnum = append(postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTypeScheduleDayPropEnum, v)
	}
}

const (

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyScheduleDayNr0DotDot6 captures enum value "0..6"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyScheduleDayNr0DotDot6 string = "0..6"
)

// prop value enum
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateScheduleDayEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTypeScheduleDayPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateScheduleDay(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"schedule_day", "body", o.ScheduleDay); err != nil {
		return err
	}

	// value enum
	if err := o.validateScheduleDayEnum("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"schedule_day", "body", *o.ScheduleDay); err != nil {
		return err
	}

	return nil
}

var postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTypeScheduleWeekPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["0..3"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTypeScheduleWeekPropEnum = append(postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTypeScheduleWeekPropEnum, v)
	}
}

const (

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyScheduleWeekNr0DotDot3 captures enum value "0..3"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyScheduleWeekNr0DotDot3 string = "0..3"
)

// prop value enum
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateScheduleWeekEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTypeScheduleWeekPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateScheduleWeek(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"schedule_week", "body", o.ScheduleWeek); err != nil {
		return err
	}

	// value enum
	if err := o.validateScheduleWeekEnum("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"schedule_week", "body", *o.ScheduleWeek); err != nil {
		return err
	}

	return nil
}

var postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTypeTargetPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["production","development","branch"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTypeTargetPropEnum = append(postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTypeTargetPropEnum, v)
	}
}

const (

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTargetProduction captures enum value "production"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTargetProduction string = "production"

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTargetDevelopment captures enum value "development"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTargetDevelopment string = "development"

	// PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTargetBranch captures enum value "branch"
	PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTargetBranch string = "branch"
)

// prop value enum
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateTargetEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicyTypeTargetPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateTarget(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"target", "body", o.Target); err != nil {
		return err
	}

	// value enum
	if err := o.validateTargetEnum("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"target", "body", *o.Target); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"backup_policy"+"."+"updated_at", "body", o.UpdatedAt); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post organizations organization databases database branches branch backups created body backup policy based on context it is used
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy) UnmarshalBinary(b []byte) error {
	var res PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodyBackupPolicy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodySchemaSnapshot post organizations organization databases database branches branch backups created body schema snapshot
swagger:model PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodySchemaSnapshot
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodySchemaSnapshot struct {

	// When the schema snapshot was created
	// Required: true
	CreatedAt *string `json:"created_at"`

	// The ID of the schema snapshot
	// Required: true
	ID *string `json:"id"`

	// The name of the schema snapshot
	// Required: true
	Name *string `json:"name"`

	// When the schema snapshot was last updated
	// Required: true
	UpdatedAt *string `json:"updated_at"`

	// The URL to the schema snapshot in the PlanetScale app
	// Required: true
	URL *string `json:"url"`
}

// Validate validates this post organizations organization databases database branches branch backups created body schema snapshot
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodySchemaSnapshot) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateURL(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodySchemaSnapshot) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"schema_snapshot"+"."+"created_at", "body", o.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodySchemaSnapshot) validateID(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"schema_snapshot"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodySchemaSnapshot) validateName(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"schema_snapshot"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodySchemaSnapshot) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"schema_snapshot"+"."+"updated_at", "body", o.UpdatedAt); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodySchemaSnapshot) validateURL(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreated"+"."+"schema_snapshot"+"."+"url", "body", o.URL); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post organizations organization databases database branches branch backups created body schema snapshot based on context it is used
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodySchemaSnapshot) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodySchemaSnapshot) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodySchemaSnapshot) UnmarshalBinary(b []byte) error {
	var res PostOrganizationsOrganizationDatabasesDatabaseBranchesBranchBackupsCreatedBodySchemaSnapshot
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
