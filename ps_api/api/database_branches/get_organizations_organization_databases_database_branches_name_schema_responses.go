// Code generated by go-swagger; DO NOT EDIT.

package database_branches

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaReader is a Reader for the GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchema structure.
type GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /organizations/{organization}/databases/{database}/branches/{name}/schema] get_organizations_organization_databases_database_branches_name_schema", response, response.Code())
	}
}

// NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK creates a GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK with default headers values
func NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK() *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK {
	return &GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK{}
}

/*
GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK describes a response with status code 200, with default header values.

Gets the schema for the branch
*/
type GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK struct {
	Payload *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBody
}

// IsSuccess returns true when this get organizations organization databases database branches name schema o k response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organizations organization databases database branches name schema o k response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases database branches name schema o k response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations organization databases database branches name schema o k response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization databases database branches name schema o k response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get organizations organization databases database branches name schema o k response
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK) Code() int {
	return 200
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/branches/{name}/schema][%d] getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/branches/{name}/schema][%d] getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK) GetPayload() *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBody {
	return o.Payload
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized creates a GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized with default headers values
func NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized() *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized {
	return &GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized{}
}

/*
GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized struct {
}

// IsSuccess returns true when this get organizations organization databases database branches name schema unauthorized response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization databases database branches name schema unauthorized response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases database branches name schema unauthorized response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization databases database branches name schema unauthorized response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization databases database branches name schema unauthorized response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get organizations organization databases database branches name schema unauthorized response
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized) Code() int {
	return 401
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/branches/{name}/schema][%d] getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized ", 401)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/branches/{name}/schema][%d] getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized ", 401)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden creates a GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden with default headers values
func NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden() *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden {
	return &GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden{}
}

/*
GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden struct {
}

// IsSuccess returns true when this get organizations organization databases database branches name schema forbidden response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization databases database branches name schema forbidden response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases database branches name schema forbidden response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization databases database branches name schema forbidden response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization databases database branches name schema forbidden response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get organizations organization databases database branches name schema forbidden response
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden) Code() int {
	return 403
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/branches/{name}/schema][%d] getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden ", 403)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/branches/{name}/schema][%d] getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden ", 403)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound creates a GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound with default headers values
func NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound() *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound {
	return &GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound{}
}

/*
GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound struct {
}

// IsSuccess returns true when this get organizations organization databases database branches name schema not found response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization databases database branches name schema not found response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases database branches name schema not found response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization databases database branches name schema not found response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization databases database branches name schema not found response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get organizations organization databases database branches name schema not found response
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound) Code() int {
	return 404
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/branches/{name}/schema][%d] getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound ", 404)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/branches/{name}/schema][%d] getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound ", 404)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError creates a GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError with default headers values
func NewGetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError() *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError {
	return &GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError{}
}

/*
GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError struct {
}

// IsSuccess returns true when this get organizations organization databases database branches name schema internal server error response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization databases database branches name schema internal server error response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases database branches name schema internal server error response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations organization databases database branches name schema internal server error response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get organizations organization databases database branches name schema internal server error response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get organizations organization databases database branches name schema internal server error response
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError) Code() int {
	return 500
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/branches/{name}/schema][%d] getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError ", 500)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/branches/{name}/schema][%d] getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError ", 500)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBody get organizations organization databases database branches name schema o k body
swagger:model GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBody
*/
type GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBody struct {

	// data
	// Required: true
	Data []*GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBodyDataItems0 `json:"data"`
}

// Validate validates this get organizations organization databases database branches name schema o k body
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get organizations organization databases database branches name schema o k body based on the context it is used
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {

			if swag.IsZero(o.Data[i]) { // not required
				return nil
			}

			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBody) UnmarshalBinary(b []byte) error {
	var res GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBodyDataItems0 get organizations organization databases database branches name schema o k body data items0
swagger:model GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBodyDataItems0
*/
type GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBodyDataItems0 struct {

	// Syntax highlighted HTML for the table's schema
	// Required: true
	HTML *string `json:"html"`

	// Name of the table
	// Required: true
	Name *string `json:"name"`

	// The table's schema
	// Required: true
	Raw *string `json:"raw"`
}

// Validate validates this get organizations organization databases database branches name schema o k body data items0
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHTML(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRaw(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBodyDataItems0) validateHTML(formats strfmt.Registry) error {

	if err := validate.Required("html", "body", o.HTML); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBodyDataItems0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBodyDataItems0) validateRaw(formats strfmt.Registry) error {

	if err := validate.Required("raw", "body", o.Raw); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get organizations organization databases database branches name schema o k body data items0 based on context it is used
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res GetOrganizationsOrganizationDatabasesDatabaseBranchesNameSchemaOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
