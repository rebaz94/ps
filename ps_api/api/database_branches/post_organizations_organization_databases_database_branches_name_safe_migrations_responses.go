// Code generated by go-swagger; DO NOT EDIT.

package database_branches

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsReader is a Reader for the PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrations structure.
type PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /organizations/{organization}/databases/{database}/branches/{name}/safe-migrations] post_organizations_organization_databases_database_branches_name_safe-migrations", response, response.Code())
	}
}

// NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK creates a PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK with default headers values
func NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK() *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK {
	return &PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK{}
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK describes a response with status code 200, with default header values.

Returns the branch with safe migrations enabled
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK struct {
	Payload *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody
}

// IsSuccess returns true when this post organizations organization databases database branches name safe migrations o k response has a 2xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post organizations organization databases database branches name safe migrations o k response has a 3xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post organizations organization databases database branches name safe migrations o k response has a 4xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post organizations organization databases database branches name safe migrations o k response has a 5xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post organizations organization databases database branches name safe migrations o k response a status code equal to that given
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post organizations organization databases database branches name safe migrations o k response
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK) Code() int {
	return 200
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{name}/safe-migrations][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK  %+v", 200, o.Payload)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK) String() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{name}/safe-migrations][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK  %+v", 200, o.Payload)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK) GetPayload() *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody {
	return o.Payload
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized creates a PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized with default headers values
func NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized() *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized {
	return &PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized{}
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized struct {
}

// IsSuccess returns true when this post organizations organization databases database branches name safe migrations unauthorized response has a 2xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post organizations organization databases database branches name safe migrations unauthorized response has a 3xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post organizations organization databases database branches name safe migrations unauthorized response has a 4xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post organizations organization databases database branches name safe migrations unauthorized response has a 5xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post organizations organization databases database branches name safe migrations unauthorized response a status code equal to that given
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post organizations organization databases database branches name safe migrations unauthorized response
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized) Code() int {
	return 401
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{name}/safe-migrations][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized ", 401)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized) String() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{name}/safe-migrations][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized ", 401)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden creates a PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden with default headers values
func NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden() *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden {
	return &PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden{}
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden struct {
}

// IsSuccess returns true when this post organizations organization databases database branches name safe migrations forbidden response has a 2xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post organizations organization databases database branches name safe migrations forbidden response has a 3xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post organizations organization databases database branches name safe migrations forbidden response has a 4xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post organizations organization databases database branches name safe migrations forbidden response has a 5xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post organizations organization databases database branches name safe migrations forbidden response a status code equal to that given
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post organizations organization databases database branches name safe migrations forbidden response
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden) Code() int {
	return 403
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{name}/safe-migrations][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden ", 403)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden) String() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{name}/safe-migrations][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden ", 403)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound creates a PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound with default headers values
func NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound() *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound {
	return &PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound{}
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound struct {
}

// IsSuccess returns true when this post organizations organization databases database branches name safe migrations not found response has a 2xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post organizations organization databases database branches name safe migrations not found response has a 3xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post organizations organization databases database branches name safe migrations not found response has a 4xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post organizations organization databases database branches name safe migrations not found response has a 5xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post organizations organization databases database branches name safe migrations not found response a status code equal to that given
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post organizations organization databases database branches name safe migrations not found response
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound) Code() int {
	return 404
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{name}/safe-migrations][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound ", 404)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound) String() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{name}/safe-migrations][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound ", 404)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError creates a PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError with default headers values
func NewPostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError() *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError {
	return &PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError{}
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError struct {
}

// IsSuccess returns true when this post organizations organization databases database branches name safe migrations internal server error response has a 2xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post organizations organization databases database branches name safe migrations internal server error response has a 3xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post organizations organization databases database branches name safe migrations internal server error response has a 4xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post organizations organization databases database branches name safe migrations internal server error response has a 5xx status code
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post organizations organization databases database branches name safe migrations internal server error response a status code equal to that given
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post organizations organization databases database branches name safe migrations internal server error response
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError) Code() int {
	return 500
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{name}/safe-migrations][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError ", 500)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError) String() string {
	return fmt.Sprintf("[POST /organizations/{organization}/databases/{database}/branches/{name}/safe-migrations][%d] postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError ", 500)
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody post organizations organization databases database branches name safe migrations o k body
swagger:model PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody struct {

	// actor
	Actor *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyActor `json:"actor,omitempty"`

	// The SKU representing the branch's cluster size
	// Required: true
	ClusterRateName *string `json:"cluster_rate_name"`

	// When the branch was created
	// Required: true
	CreatedAt *string `json:"created_at"`

	// Planetscale app URL for the branch
	// Required: true
	HTMLURL *string `json:"html_url"`

	// The ID of the branch
	// Required: true
	ID *string `json:"id"`

	// The ID of the backup from which the branch was restored
	InitialRestoreID string `json:"initial_restore_id,omitempty"`

	// The MySQL address for the branch
	// Required: true
	MysqlAddress *string `json:"mysql_address"`

	// The address of the MySQL provider for the branch
	// Required: true
	MysqlEdgeAddress *string `json:"mysql_edge_address"`

	// The name of the branch
	// Required: true
	Name *string `json:"name"`

	// The name of the parent branch from which the branch was created
	ParentBranch string `json:"parent_branch,omitempty"`

	// Whether or not the branch is a production branch
	// Required: true
	Production *bool `json:"production"`

	// Whether or not the branch is ready to serve queries
	// Required: true
	Ready *bool `json:"ready"`

	// region
	Region *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion `json:"region,omitempty"`

	// When a user last marked a backup restore checklist as completed
	RestoreChecklistCompletedAt string `json:"restore_checklist_completed_at,omitempty"`

	// restored from branch
	RestoredFromBranch *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRestoredFromBranch `json:"restored_from_branch,omitempty"`

	// Whether or not the branch has safe migrations enabled
	// Required: true
	SafeMigrations *bool `json:"safe_migrations"`

	// When the schema for the branch was last updated
	// Required: true
	SchemaLastUpdatedAt *string `json:"schema_last_updated_at"`

	// The number of shards in the branch
	ShardCount float64 `json:"shard_count,omitempty"`

	// Whether or not the branch is sharded
	// Required: true
	Sharded *bool `json:"sharded"`

	// When the branch was last updated
	// Required: true
	UpdatedAt *string `json:"updated_at"`
}

// Validate validates this post organizations organization databases database branches name safe migrations o k body
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActor(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateClusterRateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateHTMLURL(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMysqlAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMysqlEdgeAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProduction(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateReady(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRegion(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRestoredFromBranch(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSafeMigrations(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSchemaLastUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSharded(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateActor(formats strfmt.Registry) error {
	if swag.IsZero(o.Actor) { // not required
		return nil
	}

	if o.Actor != nil {
		if err := o.Actor.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK" + "." + "actor")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK" + "." + "actor")
			}
			return err
		}
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateClusterRateName(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"cluster_rate_name", "body", o.ClusterRateName); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"created_at", "body", o.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateHTMLURL(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"html_url", "body", o.HTMLURL); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateMysqlAddress(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"mysql_address", "body", o.MysqlAddress); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateMysqlEdgeAddress(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"mysql_edge_address", "body", o.MysqlEdgeAddress); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateProduction(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"production", "body", o.Production); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateReady(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"ready", "body", o.Ready); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateRegion(formats strfmt.Registry) error {
	if swag.IsZero(o.Region) { // not required
		return nil
	}

	if o.Region != nil {
		if err := o.Region.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK" + "." + "region")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK" + "." + "region")
			}
			return err
		}
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateRestoredFromBranch(formats strfmt.Registry) error {
	if swag.IsZero(o.RestoredFromBranch) { // not required
		return nil
	}

	if o.RestoredFromBranch != nil {
		if err := o.RestoredFromBranch.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK" + "." + "restored_from_branch")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK" + "." + "restored_from_branch")
			}
			return err
		}
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateSafeMigrations(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"safe_migrations", "body", o.SafeMigrations); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateSchemaLastUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"schema_last_updated_at", "body", o.SchemaLastUpdatedAt); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateSharded(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"sharded", "body", o.Sharded); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"updated_at", "body", o.UpdatedAt); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this post organizations organization databases database branches name safe migrations o k body based on the context it is used
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateActor(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateRegion(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateRestoredFromBranch(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) contextValidateActor(ctx context.Context, formats strfmt.Registry) error {

	if o.Actor != nil {

		if swag.IsZero(o.Actor) { // not required
			return nil
		}

		if err := o.Actor.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK" + "." + "actor")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK" + "." + "actor")
			}
			return err
		}
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) contextValidateRegion(ctx context.Context, formats strfmt.Registry) error {

	if o.Region != nil {

		if swag.IsZero(o.Region) { // not required
			return nil
		}

		if err := o.Region.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK" + "." + "region")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK" + "." + "region")
			}
			return err
		}
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) contextValidateRestoredFromBranch(ctx context.Context, formats strfmt.Registry) error {

	if o.RestoredFromBranch != nil {

		if swag.IsZero(o.RestoredFromBranch) { // not required
			return nil
		}

		if err := o.RestoredFromBranch.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK" + "." + "restored_from_branch")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK" + "." + "restored_from_branch")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody) UnmarshalBinary(b []byte) error {
	var res PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyActor post organizations organization databases database branches name safe migrations o k body actor
swagger:model PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyActor
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyActor struct {

	// The URL of the actor's avatar
	// Required: true
	AvatarURL *string `json:"avatar_url"`

	// The name of the actor
	// Required: true
	DisplayName *string `json:"display_name"`

	// The ID of the actor
	// Required: true
	ID *string `json:"id"`
}

// Validate validates this post organizations organization databases database branches name safe migrations o k body actor
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyActor) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAvatarURL(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyActor) validateAvatarURL(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"actor"+"."+"avatar_url", "body", o.AvatarURL); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyActor) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"actor"+"."+"display_name", "body", o.DisplayName); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyActor) validateID(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"actor"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post organizations organization databases database branches name safe migrations o k body actor based on context it is used
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyActor) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyActor) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyActor) UnmarshalBinary(b []byte) error {
	var res PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyActor
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion post organizations organization databases database branches name safe migrations o k body region
swagger:model PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion struct {

	// Name of the region
	// Required: true
	DisplayName *string `json:"display_name"`

	// Whether or not the region is currently active
	// Required: true
	Enabled *bool `json:"enabled"`

	// The ID of the region
	// Required: true
	ID *string `json:"id"`

	// Location of the region
	// Required: true
	Location *string `json:"location"`

	// Provider for the region (ex. AWS)
	// Required: true
	Provider *string `json:"provider"`

	// Public IP addresses for the region
	// Required: true
	PublicIPAddresses []string `json:"public_ip_addresses"`

	// The slug of the region
	// Required: true
	Slug *string `json:"slug"`
}

// Validate validates this post organizations organization databases database branches name safe migrations o k body region
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProvider(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePublicIPAddresses(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSlug(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"region"+"."+"display_name", "body", o.DisplayName); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion) validateEnabled(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"region"+"."+"enabled", "body", o.Enabled); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion) validateID(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"region"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion) validateLocation(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"region"+"."+"location", "body", o.Location); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion) validateProvider(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"region"+"."+"provider", "body", o.Provider); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion) validatePublicIPAddresses(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"region"+"."+"public_ip_addresses", "body", o.PublicIPAddresses); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion) validateSlug(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"region"+"."+"slug", "body", o.Slug); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post organizations organization databases database branches name safe migrations o k body region based on context it is used
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion) UnmarshalBinary(b []byte) error {
	var res PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRegion
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRestoredFromBranch post organizations organization databases database branches name safe migrations o k body restored from branch
swagger:model PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRestoredFromBranch
*/
type PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRestoredFromBranch struct {

	// When the resource was created
	// Required: true
	CreatedAt *string `json:"created_at"`

	// When the resource was deleted, if deleted
	// Required: true
	DeletedAt *string `json:"deleted_at"`

	// The ID for the resource
	// Required: true
	ID *string `json:"id"`

	// The name for the resource
	// Required: true
	Name *string `json:"name"`

	// When the resource was last updated
	// Required: true
	UpdatedAt *string `json:"updated_at"`
}

// Validate validates this post organizations organization databases database branches name safe migrations o k body restored from branch
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRestoredFromBranch) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDeletedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRestoredFromBranch) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"restored_from_branch"+"."+"created_at", "body", o.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRestoredFromBranch) validateDeletedAt(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"restored_from_branch"+"."+"deleted_at", "body", o.DeletedAt); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRestoredFromBranch) validateID(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"restored_from_branch"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRestoredFromBranch) validateName(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"restored_from_branch"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRestoredFromBranch) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("postOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOK"+"."+"restored_from_branch"+"."+"updated_at", "body", o.UpdatedAt); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post organizations organization databases database branches name safe migrations o k body restored from branch based on context it is used
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRestoredFromBranch) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRestoredFromBranch) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRestoredFromBranch) UnmarshalBinary(b []byte) error {
	var res PostOrganizationsOrganizationDatabasesDatabaseBranchesNameSafeMigrationsOKBodyRestoredFromBranch
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
