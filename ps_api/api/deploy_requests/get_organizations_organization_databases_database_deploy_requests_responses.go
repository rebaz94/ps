// Code generated by go-swagger; DO NOT EDIT.

package deploy_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsReader is a Reader for the GetOrganizationsOrganizationDatabasesDatabaseDeployRequests structure.
type GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /organizations/{organization}/databases/{database}/deploy-requests] get_organizations_organization_databases_database_deploy-requests", response, response.Code())
	}
}

// NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK creates a GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK with default headers values
func NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK() *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK {
	return &GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK{}
}

/*
GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK describes a response with status code 200, with default header values.

Returns a list of deploy requests for a database
*/
type GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK struct {
	Payload *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBody
}

// IsSuccess returns true when this get organizations organization databases database deploy requests o k response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organizations organization databases database deploy requests o k response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases database deploy requests o k response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations organization databases database deploy requests o k response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization databases database deploy requests o k response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get organizations organization databases database deploy requests o k response
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK) Code() int {
	return 200
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/deploy-requests][%d] getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/deploy-requests][%d] getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK) GetPayload() *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBody {
	return o.Payload
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized creates a GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized with default headers values
func NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized() *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized {
	return &GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized{}
}

/*
GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized struct {
}

// IsSuccess returns true when this get organizations organization databases database deploy requests unauthorized response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization databases database deploy requests unauthorized response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases database deploy requests unauthorized response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization databases database deploy requests unauthorized response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization databases database deploy requests unauthorized response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get organizations organization databases database deploy requests unauthorized response
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized) Code() int {
	return 401
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/deploy-requests][%d] getOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized ", 401)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/deploy-requests][%d] getOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized ", 401)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden creates a GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden with default headers values
func NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden() *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden {
	return &GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden{}
}

/*
GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden struct {
}

// IsSuccess returns true when this get organizations organization databases database deploy requests forbidden response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization databases database deploy requests forbidden response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases database deploy requests forbidden response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization databases database deploy requests forbidden response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization databases database deploy requests forbidden response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get organizations organization databases database deploy requests forbidden response
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden) Code() int {
	return 403
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/deploy-requests][%d] getOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden ", 403)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/deploy-requests][%d] getOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden ", 403)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound creates a GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound with default headers values
func NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound() *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound {
	return &GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound{}
}

/*
GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound struct {
}

// IsSuccess returns true when this get organizations organization databases database deploy requests not found response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization databases database deploy requests not found response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases database deploy requests not found response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organizations organization databases database deploy requests not found response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get organizations organization databases database deploy requests not found response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get organizations organization databases database deploy requests not found response
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound) Code() int {
	return 404
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/deploy-requests][%d] getOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound ", 404)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/deploy-requests][%d] getOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound ", 404)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError creates a GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError with default headers values
func NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError() *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError {
	return &GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError{}
}

/*
GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError struct {
}

// IsSuccess returns true when this get organizations organization databases database deploy requests internal server error response has a 2xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organizations organization databases database deploy requests internal server error response has a 3xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organizations organization databases database deploy requests internal server error response has a 4xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organizations organization databases database deploy requests internal server error response has a 5xx status code
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get organizations organization databases database deploy requests internal server error response a status code equal to that given
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get organizations organization databases database deploy requests internal server error response
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError) Code() int {
	return 500
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/deploy-requests][%d] getOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError ", 500)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError) String() string {
	return fmt.Sprintf("[GET /organizations/{organization}/databases/{database}/deploy-requests][%d] getOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError ", 500)
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBody get organizations organization databases database deploy requests o k body
swagger:model GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBody
*/
type GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBody struct {

	// data
	// Required: true
	Data []*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0 `json:"data"`
}

// Validate validates this get organizations organization databases database deploy requests o k body
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get organizations organization databases database deploy requests o k body based on the context it is used
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {

			if swag.IsZero(o.Data[i]) { // not required
				return nil
			}

			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBody) UnmarshalBinary(b []byte) error {
	var res GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0 get organizations organization databases database deploy requests o k body data items0
swagger:model GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0
*/
type GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0 struct {

	// actor
	// Required: true
	Actor *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0Actor `json:"actor"`

	// Whether or not the deploy request is approved
	// Required: true
	Approved *bool `json:"approved"`

	// The name of the branch the deploy request was created from
	// Required: true
	Branch *string `json:"branch"`

	// Whether or not the deploy request branch was deleted
	// Required: true
	BranchDeleted *bool `json:"branch_deleted"`

	// When the deploy request branch was deleted
	// Required: true
	BranchDeletedAt *string `json:"branch_deleted_at"`

	// branch deleted by
	// Required: true
	BranchDeletedBy *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0BranchDeletedBy `json:"branch_deleted_by"`

	// The id of the branch the deploy request was created from
	// Required: true
	BranchID *string `json:"branch_id"`

	// When the deploy request was closed
	// Required: true
	ClosedAt *string `json:"closed_at"`

	// closed by
	// Required: true
	ClosedBy *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0ClosedBy `json:"closed_by"`

	// When the deploy request was created
	// Required: true
	CreatedAt *string `json:"created_at"`

	// When the deploy request was deployed
	// Required: true
	DeployedAt *string `json:"deployed_at"`

	// The deployment state of the deploy request
	// Required: true
	// Enum: [pending ready no_changes queued submitting in_progress pending_cutover in_progress_vschema in_progress_cancel in_progress_cutover complete complete_cancel complete_error complete_pending_revert in_progress_revert complete_revert complete_revert_error cancelled error]
	DeploymentState *string `json:"deployment_state"`

	// The HTML body of the deploy request
	// Required: true
	HTMLBody *string `json:"html_body"`

	// The PlanetScale app address for the deploy request
	// Required: true
	HTMLURL *string `json:"html_url"`

	// The ID of the deploy request
	// Required: true
	ID *string `json:"id"`

	// The name of the branch the deploy request will be merged into
	// Required: true
	IntoBranch *string `json:"into_branch"`

	// The number of shards the branch the deploy request will be merged into has
	// Required: true
	IntoBranchShardCount *float64 `json:"into_branch_shard_count"`

	// Whether or not the branch the deploy request will be merged into is sharded
	// Required: true
	IntoBranchSharded *bool `json:"into_branch_sharded"`

	// Notes on the deploy request
	// Required: true
	Notes *string `json:"notes"`

	// The number of the deploy request
	// Required: true
	Number *float64 `json:"number"`

	// Whether the deploy request is open or closed
	// Required: true
	// Enum: [open closed]
	State *string `json:"state"`

	// When the deploy request was last updated
	// Required: true
	UpdatedAt *string `json:"updated_at"`
}

// Validate validates this get organizations organization databases database deploy requests o k body data items0
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActor(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateApproved(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBranch(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBranchDeleted(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBranchDeletedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBranchDeletedBy(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBranchID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateClosedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateClosedBy(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDeployedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDeploymentState(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateHTMLBody(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateHTMLURL(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIntoBranch(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIntoBranchShardCount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIntoBranchSharded(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNotes(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateState(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateActor(formats strfmt.Registry) error {

	if err := validate.Required("actor", "body", o.Actor); err != nil {
		return err
	}

	if o.Actor != nil {
		if err := o.Actor.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("actor")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("actor")
			}
			return err
		}
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateApproved(formats strfmt.Registry) error {

	if err := validate.Required("approved", "body", o.Approved); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateBranch(formats strfmt.Registry) error {

	if err := validate.Required("branch", "body", o.Branch); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateBranchDeleted(formats strfmt.Registry) error {

	if err := validate.Required("branch_deleted", "body", o.BranchDeleted); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateBranchDeletedAt(formats strfmt.Registry) error {

	if err := validate.Required("branch_deleted_at", "body", o.BranchDeletedAt); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateBranchDeletedBy(formats strfmt.Registry) error {

	if err := validate.Required("branch_deleted_by", "body", o.BranchDeletedBy); err != nil {
		return err
	}

	if o.BranchDeletedBy != nil {
		if err := o.BranchDeletedBy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("branch_deleted_by")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("branch_deleted_by")
			}
			return err
		}
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateBranchID(formats strfmt.Registry) error {

	if err := validate.Required("branch_id", "body", o.BranchID); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateClosedAt(formats strfmt.Registry) error {

	if err := validate.Required("closed_at", "body", o.ClosedAt); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateClosedBy(formats strfmt.Registry) error {

	if err := validate.Required("closed_by", "body", o.ClosedBy); err != nil {
		return err
	}

	if o.ClosedBy != nil {
		if err := o.ClosedBy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("closed_by")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("closed_by")
			}
			return err
		}
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("created_at", "body", o.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateDeployedAt(formats strfmt.Registry) error {

	if err := validate.Required("deployed_at", "body", o.DeployedAt); err != nil {
		return err
	}

	return nil
}

var getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0TypeDeploymentStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["pending","ready","no_changes","queued","submitting","in_progress","pending_cutover","in_progress_vschema","in_progress_cancel","in_progress_cutover","complete","complete_cancel","complete_error","complete_pending_revert","in_progress_revert","complete_revert","complete_revert_error","cancelled","error"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0TypeDeploymentStatePropEnum = append(getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0TypeDeploymentStatePropEnum, v)
	}
}

const (

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStatePending captures enum value "pending"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStatePending string = "pending"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateReady captures enum value "ready"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateReady string = "ready"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateNoChanges captures enum value "no_changes"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateNoChanges string = "no_changes"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateQueued captures enum value "queued"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateQueued string = "queued"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateSubmitting captures enum value "submitting"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateSubmitting string = "submitting"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateInProgress captures enum value "in_progress"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateInProgress string = "in_progress"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStatePendingCutover captures enum value "pending_cutover"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStatePendingCutover string = "pending_cutover"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateInProgressVschema captures enum value "in_progress_vschema"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateInProgressVschema string = "in_progress_vschema"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateInProgressCancel captures enum value "in_progress_cancel"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateInProgressCancel string = "in_progress_cancel"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateInProgressCutover captures enum value "in_progress_cutover"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateInProgressCutover string = "in_progress_cutover"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateComplete captures enum value "complete"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateComplete string = "complete"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateCompleteCancel captures enum value "complete_cancel"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateCompleteCancel string = "complete_cancel"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateCompleteError captures enum value "complete_error"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateCompleteError string = "complete_error"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateCompletePendingRevert captures enum value "complete_pending_revert"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateCompletePendingRevert string = "complete_pending_revert"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateInProgressRevert captures enum value "in_progress_revert"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateInProgressRevert string = "in_progress_revert"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateCompleteRevert captures enum value "complete_revert"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateCompleteRevert string = "complete_revert"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateCompleteRevertError captures enum value "complete_revert_error"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateCompleteRevertError string = "complete_revert_error"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateCancelled captures enum value "cancelled"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateCancelled string = "cancelled"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateError captures enum value "error"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0DeploymentStateError string = "error"
)

// prop value enum
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateDeploymentStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0TypeDeploymentStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateDeploymentState(formats strfmt.Registry) error {

	if err := validate.Required("deployment_state", "body", o.DeploymentState); err != nil {
		return err
	}

	// value enum
	if err := o.validateDeploymentStateEnum("deployment_state", "body", *o.DeploymentState); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateHTMLBody(formats strfmt.Registry) error {

	if err := validate.Required("html_body", "body", o.HTMLBody); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateHTMLURL(formats strfmt.Registry) error {

	if err := validate.Required("html_url", "body", o.HTMLURL); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateIntoBranch(formats strfmt.Registry) error {

	if err := validate.Required("into_branch", "body", o.IntoBranch); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateIntoBranchShardCount(formats strfmt.Registry) error {

	if err := validate.Required("into_branch_shard_count", "body", o.IntoBranchShardCount); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateIntoBranchSharded(formats strfmt.Registry) error {

	if err := validate.Required("into_branch_sharded", "body", o.IntoBranchSharded); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateNotes(formats strfmt.Registry) error {

	if err := validate.Required("notes", "body", o.Notes); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateNumber(formats strfmt.Registry) error {

	if err := validate.Required("number", "body", o.Number); err != nil {
		return err
	}

	return nil
}

var getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0TypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["open","closed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0TypeStatePropEnum = append(getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0TypeStatePropEnum, v)
	}
}

const (

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0StateOpen captures enum value "open"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0StateOpen string = "open"

	// GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0StateClosed captures enum value "closed"
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0StateClosed string = "closed"
)

// prop value enum
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0TypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateState(formats strfmt.Registry) error {

	if err := validate.Required("state", "body", o.State); err != nil {
		return err
	}

	// value enum
	if err := o.validateStateEnum("state", "body", *o.State); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("updated_at", "body", o.UpdatedAt); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this get organizations organization databases database deploy requests o k body data items0 based on the context it is used
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateActor(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateBranchDeletedBy(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateClosedBy(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) contextValidateActor(ctx context.Context, formats strfmt.Registry) error {

	if o.Actor != nil {

		if err := o.Actor.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("actor")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("actor")
			}
			return err
		}
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) contextValidateBranchDeletedBy(ctx context.Context, formats strfmt.Registry) error {

	if o.BranchDeletedBy != nil {

		if err := o.BranchDeletedBy.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("branch_deleted_by")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("branch_deleted_by")
			}
			return err
		}
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) contextValidateClosedBy(ctx context.Context, formats strfmt.Registry) error {

	if o.ClosedBy != nil {

		if err := o.ClosedBy.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("closed_by")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("closed_by")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0Actor get organizations organization databases database deploy requests o k body data items0 actor
swagger:model GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0Actor
*/
type GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0Actor struct {

	// The URL of the actor's avatar
	// Required: true
	AvatarURL *string `json:"avatar_url"`

	// The name of the actor
	// Required: true
	DisplayName *string `json:"display_name"`

	// The ID of the actor
	// Required: true
	ID *string `json:"id"`
}

// Validate validates this get organizations organization databases database deploy requests o k body data items0 actor
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0Actor) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAvatarURL(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0Actor) validateAvatarURL(formats strfmt.Registry) error {

	if err := validate.Required("actor"+"."+"avatar_url", "body", o.AvatarURL); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0Actor) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("actor"+"."+"display_name", "body", o.DisplayName); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0Actor) validateID(formats strfmt.Registry) error {

	if err := validate.Required("actor"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get organizations organization databases database deploy requests o k body data items0 actor based on context it is used
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0Actor) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0Actor) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0Actor) UnmarshalBinary(b []byte) error {
	var res GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0Actor
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0BranchDeletedBy get organizations organization databases database deploy requests o k body data items0 branch deleted by
swagger:model GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0BranchDeletedBy
*/
type GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0BranchDeletedBy struct {

	// The URL of the actor's avatar
	// Required: true
	AvatarURL *string `json:"avatar_url"`

	// The name of the actor
	// Required: true
	DisplayName *string `json:"display_name"`

	// The ID of the actor
	// Required: true
	ID *string `json:"id"`
}

// Validate validates this get organizations organization databases database deploy requests o k body data items0 branch deleted by
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0BranchDeletedBy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAvatarURL(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0BranchDeletedBy) validateAvatarURL(formats strfmt.Registry) error {

	if err := validate.Required("branch_deleted_by"+"."+"avatar_url", "body", o.AvatarURL); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0BranchDeletedBy) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("branch_deleted_by"+"."+"display_name", "body", o.DisplayName); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0BranchDeletedBy) validateID(formats strfmt.Registry) error {

	if err := validate.Required("branch_deleted_by"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get organizations organization databases database deploy requests o k body data items0 branch deleted by based on context it is used
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0BranchDeletedBy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0BranchDeletedBy) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0BranchDeletedBy) UnmarshalBinary(b []byte) error {
	var res GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0BranchDeletedBy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0ClosedBy get organizations organization databases database deploy requests o k body data items0 closed by
swagger:model GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0ClosedBy
*/
type GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0ClosedBy struct {

	// The URL of the actor's avatar
	// Required: true
	AvatarURL *string `json:"avatar_url"`

	// The name of the actor
	// Required: true
	DisplayName *string `json:"display_name"`

	// The ID of the actor
	// Required: true
	ID *string `json:"id"`
}

// Validate validates this get organizations organization databases database deploy requests o k body data items0 closed by
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0ClosedBy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAvatarURL(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0ClosedBy) validateAvatarURL(formats strfmt.Registry) error {

	if err := validate.Required("closed_by"+"."+"avatar_url", "body", o.AvatarURL); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0ClosedBy) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("closed_by"+"."+"display_name", "body", o.DisplayName); err != nil {
		return err
	}

	return nil
}

func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0ClosedBy) validateID(formats strfmt.Registry) error {

	if err := validate.Required("closed_by"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get organizations organization databases database deploy requests o k body data items0 closed by based on context it is used
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0ClosedBy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0ClosedBy) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0ClosedBy) UnmarshalBinary(b []byte) error {
	var res GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOKBodyDataItems0ClosedBy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
