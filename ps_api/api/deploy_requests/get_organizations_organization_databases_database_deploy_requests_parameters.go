// Code generated by go-swagger; DO NOT EDIT.

package deploy_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams creates a new GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams() *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	return &GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParamsWithTimeout creates a new GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams object
// with the ability to set a timeout on a request.
func NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParamsWithTimeout(timeout time.Duration) *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	return &GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams{
		timeout: timeout,
	}
}

// NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParamsWithContext creates a new GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams object
// with the ability to set a context for a request.
func NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParamsWithContext(ctx context.Context) *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	return &GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams{
		Context: ctx,
	}
}

// NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParamsWithHTTPClient creates a new GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParamsWithHTTPClient(client *http.Client) *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	return &GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams{
		HTTPClient: client,
	}
}

/*
GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams contains all the parameters to send to the API endpoint

	for the get organizations organization databases database deploy requests operation.

	Typically these are written to a http.Request.
*/
type GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams struct {

	/* Branch.

	   Filter by the name of the branch the deploy request is created from
	*/
	Branch *string

	/* Database.

	   The name of the deploy request's database
	*/
	Database string

	/* IntoBranch.

	   Filter by the name of the branch the deploy request will be merged into
	*/
	IntoBranch *string

	/* Organization.

	   The name of the deploy request's organization
	*/
	Organization string

	/* Page.

	   If provided, specifies the page offset of returned results

	   Default: 1
	*/
	Page *float64

	/* PerPage.

	   If provided, specifies the number of returned results

	   Default: 25
	*/
	PerPage *float64

	/* State.

	   Filter by state of the deploy request (open, closed, deployed)
	*/
	State *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get organizations organization databases database deploy requests params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) WithDefaults() *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get organizations organization databases database deploy requests params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) SetDefaults() {
	var (
		pageDefault = float64(1)

		perPageDefault = float64(25)
	)

	val := GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams{
		Page:    &pageDefault,
		PerPage: &perPageDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) WithTimeout(timeout time.Duration) *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) WithContext(ctx context.Context) *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) WithHTTPClient(client *http.Client) *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBranch adds the branch to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) WithBranch(branch *string) *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	o.SetBranch(branch)
	return o
}

// SetBranch adds the branch to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) SetBranch(branch *string) {
	o.Branch = branch
}

// WithDatabase adds the database to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) WithDatabase(database string) *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	o.SetDatabase(database)
	return o
}

// SetDatabase adds the database to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) SetDatabase(database string) {
	o.Database = database
}

// WithIntoBranch adds the intoBranch to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) WithIntoBranch(intoBranch *string) *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	o.SetIntoBranch(intoBranch)
	return o
}

// SetIntoBranch adds the intoBranch to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) SetIntoBranch(intoBranch *string) {
	o.IntoBranch = intoBranch
}

// WithOrganization adds the organization to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) WithOrganization(organization string) *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithPage adds the page to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) WithPage(page *float64) *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) SetPage(page *float64) {
	o.Page = page
}

// WithPerPage adds the perPage to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) WithPerPage(perPage *float64) *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	o.SetPerPage(perPage)
	return o
}

// SetPerPage adds the perPage to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) SetPerPage(perPage *float64) {
	o.PerPage = perPage
}

// WithState adds the state to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) WithState(state *string) *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams {
	o.SetState(state)
	return o
}

// SetState adds the state to the get organizations organization databases database deploy requests params
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) SetState(state *string) {
	o.State = state
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Branch != nil {

		// query param branch
		var qrBranch string

		if o.Branch != nil {
			qrBranch = *o.Branch
		}
		qBranch := qrBranch
		if qBranch != "" {

			if err := r.SetQueryParam("branch", qBranch); err != nil {
				return err
			}
		}
	}

	// path param database
	if err := r.SetPathParam("database", o.Database); err != nil {
		return err
	}

	if o.IntoBranch != nil {

		// query param into_branch
		var qrIntoBranch string

		if o.IntoBranch != nil {
			qrIntoBranch = *o.IntoBranch
		}
		qIntoBranch := qrIntoBranch
		if qIntoBranch != "" {

			if err := r.SetQueryParam("into_branch", qIntoBranch); err != nil {
				return err
			}
		}
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	if o.Page != nil {

		// query param page
		var qrPage float64

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatFloat64(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.PerPage != nil {

		// query param per_page
		var qrPerPage float64

		if o.PerPage != nil {
			qrPerPage = *o.PerPage
		}
		qPerPage := swag.FormatFloat64(qrPerPage)
		if qPerPage != "" {

			if err := r.SetQueryParam("per_page", qPerPage); err != nil {
				return err
			}
		}
	}

	if o.State != nil {

		// query param state
		var qrState string

		if o.State != nil {
			qrState = *o.State
		}
		qState := qrState
		if qState != "" {

			if err := r.SetQueryParam("state", qState); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
