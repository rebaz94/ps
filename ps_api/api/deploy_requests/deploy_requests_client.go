// Code generated by go-swagger; DO NOT EDIT.

package deploy_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new deploy requests API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for deploy requests API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	GetOrganizationsOrganizationDatabasesDatabaseDeployQueue(params *GetOrganizationsOrganizationDatabasesDatabaseDeployQueueParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseDeployQueueOK, error)

	GetOrganizationsOrganizationDatabasesDatabaseDeployRequests(params *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK, error)

	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumber(params *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK, error)

	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeployment(params *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeploymentParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeploymentOK, error)

	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOperations(params *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOperationsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOperationsOK, error)

	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviews(params *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviewsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviewsOK, error)

	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumber(params *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK, error)

	PostOrganizationsOrganizationDatabasesDatabaseDeployRequests(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsCreated, error)

	PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberApplyDeploy(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberApplyDeployParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberApplyDeployOK, error)

	PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCancel(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCancelParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCancelOK, error)

	PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCompleteDeploy(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCompleteDeployParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCompleteDeployOK, error)

	PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeploy(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeployParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeployOK, error)

	PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberRevert(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberRevertParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberRevertOK, error)

	PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviews(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviewsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviewsCreated, error)

	PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberSkipRevert(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberSkipRevertParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberSkipRevertOK, error)

	PutOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberAutoApply(params *PutOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberAutoApplyParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PutOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberAutoApplyOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
GetOrganizationsOrganizationDatabasesDatabaseDeployQueue gets the deploy queue

The deploy queue returns the current list of deploy requests in the order they will be deployed.
*/
func (a *Client) GetOrganizationsOrganizationDatabasesDatabaseDeployQueue(params *GetOrganizationsOrganizationDatabasesDatabaseDeployQueueParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseDeployQueueOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOrganizationsOrganizationDatabasesDatabaseDeployQueueParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "get_organizations_organization_databases_database_deploy-queue",
		Method:             "GET",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-queue",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetOrganizationsOrganizationDatabasesDatabaseDeployQueueReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOrganizationsOrganizationDatabasesDatabaseDeployQueueOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_organizations_organization_databases_database_deploy-queue: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequests lists deploy requests

	List deploy requests for a database

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_deploy_request`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `read_deploy_requests` |
| Database | `read_deploy_requests` |
*/
func (a *Client) GetOrganizationsOrganizationDatabasesDatabaseDeployRequests(params *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "get_organizations_organization_databases_database_deploy-requests",
		Method:             "GET",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_organizations_organization_databases_database_deploy-requests: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumber gets a deploy request

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_deploy_request`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `read_deploy_requests` |
| Database | `read_deploy_requests` |
*/
func (a *Client) GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumber(params *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "get_organizations_organization_databases_database_deploy-requests_number",
		Method:             "GET",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests/{number}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_organizations_organization_databases_database_deploy-requests_number: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeployment gets a deployment

	Get the deployment for a deploy request

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_deploy_request`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `read_deploy_requests` |
| Database | `read_deploy_requests` |
*/
func (a *Client) GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeployment(params *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeploymentParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeploymentOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeploymentParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "get_organizations_organization_databases_database_deploy-requests_number_deployment",
		Method:             "GET",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests/{number}/deployment",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeploymentReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeploymentOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_organizations_organization_databases_database_deploy-requests_number_deployment: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOperations lists deploy operations

	List deploy operations for a deploy request

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_deploy_request`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `read_deploy_requests` |
| Database | `read_deploy_requests` |
*/
func (a *Client) GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOperations(params *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOperationsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOperationsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOperationsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "get_organizations_organization_databases_database_deploy-requests_number_operations",
		Method:             "GET",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests/{number}/operations",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOperationsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOperationsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_organizations_organization_databases_database_deploy-requests_number_operations: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviews lists deploy request reviews

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_deploy_request`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `read_deploy_requests` |
| Database | `read_deploy_requests` |
*/
func (a *Client) GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviews(params *GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviewsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviewsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviewsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "get_organizations_organization_databases_database_deploy-requests_number_reviews",
		Method:             "GET",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests/{number}/reviews",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviewsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviewsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_organizations_organization_databases_database_deploy-requests_number_reviews: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumber closes a deploy request

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_deploy_request`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `write_deploy_requests` |
| Database | `write_deploy_requests` |
*/
func (a *Client) PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumber(params *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "patch_organizations_organization_databases_database_deploy-requests_number",
		Method:             "PATCH",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests/{number}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for patch_organizations_organization_databases_database_deploy-requests_number: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	PostOrganizationsOrganizationDatabasesDatabaseDeployRequests creates a deploy request

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_deploy_request`, `create_deploy_requests`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `write_deploy_requests` |
| Database | `write_deploy_requests` |
*/
func (a *Client) PostOrganizationsOrganizationDatabasesDatabaseDeployRequests(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostOrganizationsOrganizationDatabasesDatabaseDeployRequestsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "post_organizations_organization_databases_database_deploy-requests",
		Method:             "POST",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for post_organizations_organization_databases_database_deploy-requests: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberApplyDeploy completes a gated deploy request

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_deploy_request`, `create_deploy_request`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `deploy_deploy_requests` |
| Database | `deploy_deploy_requests` |
*/
func (a *Client) PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberApplyDeploy(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberApplyDeployParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberApplyDeployOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberApplyDeployParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "post_organizations_organization_databases_database_deploy-requests_number_apply-deploy",
		Method:             "POST",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests/{number}/apply-deploy",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberApplyDeployReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberApplyDeployOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for post_organizations_organization_databases_database_deploy-requests_number_apply-deploy: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCancel cancels a queued deploy request

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_deploy_request`, `create_deploy_request`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `deploy_deploy_requests` |
| Database | `deploy_deploy_requests` |
*/
func (a *Client) PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCancel(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCancelParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCancelOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCancelParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "post_organizations_organization_databases_database_deploy-requests_number_cancel",
		Method:             "POST",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests/{number}/cancel",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCancelReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCancelOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for post_organizations_organization_databases_database_deploy-requests_number_cancel: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCompleteDeploy completes an errored deploy

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_deploy_request`, `create_deploy_request`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `deploy_deploy_requests` |
| Database | `deploy_deploy_requests` |
*/
func (a *Client) PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCompleteDeploy(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCompleteDeployParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCompleteDeployOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCompleteDeployParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "post_organizations_organization_databases_database_deploy-requests_number_complete-deploy",
		Method:             "POST",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests/{number}/complete-deploy",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCompleteDeployReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberCompleteDeployOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for post_organizations_organization_databases_database_deploy-requests_number_complete-deploy: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeploy queues a deploy request

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_deploy_request`, `create_deploy_request`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `deploy_deploy_requests` |
| Database | `deploy_deploy_requests` |
*/
func (a *Client) PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeploy(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeployParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeployOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeployParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "post_organizations_organization_databases_database_deploy-requests_number_deploy",
		Method:             "POST",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests/{number}/deploy",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeployReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberDeployOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for post_organizations_organization_databases_database_deploy-requests_number_deploy: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberRevert completes a revert

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_deploy_request`, `create_deploy_request`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `deploy_deploy_requests` |
| Database | `deploy_deploy_requests` |
*/
func (a *Client) PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberRevert(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberRevertParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberRevertOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberRevertParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "post_organizations_organization_databases_database_deploy-requests_number_revert",
		Method:             "POST",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests/{number}/revert",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberRevertReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberRevertOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for post_organizations_organization_databases_database_deploy-requests_number_revert: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviews reviews a deploy request

	Review a deploy request by either approving or commenting on the deploy request

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`approve_deploy_request`, `review_deploy_request`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `approve_deploy_requests` |
| Database | `approve_deploy_requests` |
*/
func (a *Client) PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviews(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviewsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviewsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviewsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "post_organizations_organization_databases_database_deploy-requests_number_reviews",
		Method:             "POST",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests/{number}/reviews",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviewsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReviewsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for post_organizations_organization_databases_database_deploy-requests_number_reviews: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberSkipRevert skips revert period

	Skips the revert period for a deploy request

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_deploy_request`, `create_deploy_request`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `deploy_deploy_requests` |
| Database | `deploy_deploy_requests` |
*/
func (a *Client) PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberSkipRevert(params *PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberSkipRevertParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberSkipRevertOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberSkipRevertParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "post_organizations_organization_databases_database_deploy-requests_number_skip-revert",
		Method:             "POST",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests/{number}/skip-revert",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberSkipRevertReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberSkipRevertOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for post_organizations_organization_databases_database_deploy-requests_number_skip-revert: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	PutOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberAutoApply updates auto apply for deploy request

	Enables or disabled the auto-apply setting for a deploy request

### Authorization
A service token or OAuth token must have at least one of the following access or scopes in order to use this API endpoint:

**Service Token Accesses**

	`read_deploy_request`, `create_deploy_request`

**OAuth Scopes**

	| Resource | Scopes |

| :------- | :---------- |
| Organization | `deploy_deploy_requests` |
| Database | `deploy_deploy_requests` |
*/
func (a *Client) PutOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberAutoApply(params *PutOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberAutoApplyParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PutOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberAutoApplyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberAutoApplyParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "put_organizations_organization_databases_database_deploy-requests_number_auto-apply",
		Method:             "PUT",
		PathPattern:        "/organizations/{organization}/databases/{database}/deploy-requests/{number}/auto-apply",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PutOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberAutoApplyReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberAutoApplyOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for put_organizations_organization_databases_database_deploy-requests_number_auto-apply: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
