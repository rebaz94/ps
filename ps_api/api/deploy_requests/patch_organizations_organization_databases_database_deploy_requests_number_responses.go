// Code generated by go-swagger; DO NOT EDIT.

package deploy_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReader is a Reader for the PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumber structure.
type PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /organizations/{organization}/databases/{database}/deploy-requests/{number}] patch_organizations_organization_databases_database_deploy-requests_number", response, response.Code())
	}
}

// NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK creates a PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK with default headers values
func NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK() *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK {
	return &PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK{}
}

/*
PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK describes a response with status code 200, with default header values.

Returns the updated deploy request
*/
type PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK struct {
	Payload *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody
}

// IsSuccess returns true when this patch organizations organization databases database deploy requests number o k response has a 2xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch organizations organization databases database deploy requests number o k response has a 3xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch organizations organization databases database deploy requests number o k response has a 4xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch organizations organization databases database deploy requests number o k response has a 5xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch organizations organization databases database deploy requests number o k response a status code equal to that given
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the patch organizations organization databases database deploy requests number o k response
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK) Code() int {
	return 200
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{organization}/databases/{database}/deploy-requests/{number}][%d] patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK  %+v", 200, o.Payload)
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK) String() string {
	return fmt.Sprintf("[PATCH /organizations/{organization}/databases/{database}/deploy-requests/{number}][%d] patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK  %+v", 200, o.Payload)
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK) GetPayload() *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody {
	return o.Payload
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized creates a PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized with default headers values
func NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized() *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized {
	return &PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized{}
}

/*
PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized struct {
}

// IsSuccess returns true when this patch organizations organization databases database deploy requests number unauthorized response has a 2xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch organizations organization databases database deploy requests number unauthorized response has a 3xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch organizations organization databases database deploy requests number unauthorized response has a 4xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch organizations organization databases database deploy requests number unauthorized response has a 5xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch organizations organization databases database deploy requests number unauthorized response a status code equal to that given
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the patch organizations organization databases database deploy requests number unauthorized response
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized) Code() int {
	return 401
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{organization}/databases/{database}/deploy-requests/{number}][%d] patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized ", 401)
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /organizations/{organization}/databases/{database}/deploy-requests/{number}][%d] patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized ", 401)
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden creates a PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden with default headers values
func NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden() *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden {
	return &PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden{}
}

/*
PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden struct {
}

// IsSuccess returns true when this patch organizations organization databases database deploy requests number forbidden response has a 2xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch organizations organization databases database deploy requests number forbidden response has a 3xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch organizations organization databases database deploy requests number forbidden response has a 4xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch organizations organization databases database deploy requests number forbidden response has a 5xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch organizations organization databases database deploy requests number forbidden response a status code equal to that given
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the patch organizations organization databases database deploy requests number forbidden response
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden) Code() int {
	return 403
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{organization}/databases/{database}/deploy-requests/{number}][%d] patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden ", 403)
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden) String() string {
	return fmt.Sprintf("[PATCH /organizations/{organization}/databases/{database}/deploy-requests/{number}][%d] patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden ", 403)
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound creates a PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound with default headers values
func NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound() *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound {
	return &PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound{}
}

/*
PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound struct {
}

// IsSuccess returns true when this patch organizations organization databases database deploy requests number not found response has a 2xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch organizations organization databases database deploy requests number not found response has a 3xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch organizations organization databases database deploy requests number not found response has a 4xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch organizations organization databases database deploy requests number not found response has a 5xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch organizations organization databases database deploy requests number not found response a status code equal to that given
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the patch organizations organization databases database deploy requests number not found response
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound) Code() int {
	return 404
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{organization}/databases/{database}/deploy-requests/{number}][%d] patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound ", 404)
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound) String() string {
	return fmt.Sprintf("[PATCH /organizations/{organization}/databases/{database}/deploy-requests/{number}][%d] patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound ", 404)
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError creates a PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError with default headers values
func NewPatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError() *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError {
	return &PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError{}
}

/*
PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError struct {
}

// IsSuccess returns true when this patch organizations organization databases database deploy requests number internal server error response has a 2xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch organizations organization databases database deploy requests number internal server error response has a 3xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch organizations organization databases database deploy requests number internal server error response has a 4xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch organizations organization databases database deploy requests number internal server error response has a 5xx status code
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch organizations organization databases database deploy requests number internal server error response a status code equal to that given
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the patch organizations organization databases database deploy requests number internal server error response
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError) Code() int {
	return 500
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{organization}/databases/{database}/deploy-requests/{number}][%d] patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError ", 500)
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /organizations/{organization}/databases/{database}/deploy-requests/{number}][%d] patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError ", 500)
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBody patch organizations organization databases database deploy requests number body
swagger:model PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBody
*/
type PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBody struct {

	// The deploy request will be updated to this state
	// Enum: [closed]
	State string `json:"state,omitempty"`
}

// Validate validates this patch organizations organization databases database deploy requests number body
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBodyTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["closed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBodyTypeStatePropEnum = append(patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBodyTypeStatePropEnum, v)
	}
}

const (

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBodyStateClosed captures enum value "closed"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBodyStateClosed string = "closed"
)

// prop value enum
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBody) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBodyTypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBody) validateState(formats strfmt.Registry) error {
	if swag.IsZero(o.State) { // not required
		return nil
	}

	// value enum
	if err := o.validateStateEnum("body"+"."+"state", "body", o.State); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this patch organizations organization databases database deploy requests number body based on context it is used
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBody) UnmarshalBinary(b []byte) error {
	var res PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody patch organizations organization databases database deploy requests number o k body
swagger:model PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody
*/
type PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody struct {

	// actor
	// Required: true
	Actor *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyActor `json:"actor"`

	// Whether or not the deploy request is approved
	// Required: true
	Approved *bool `json:"approved"`

	// The name of the branch the deploy request was created from
	// Required: true
	Branch *string `json:"branch"`

	// Whether or not the deploy request branch was deleted
	// Required: true
	BranchDeleted *bool `json:"branch_deleted"`

	// When the deploy request branch was deleted
	// Required: true
	BranchDeletedAt *string `json:"branch_deleted_at"`

	// branch deleted by
	// Required: true
	BranchDeletedBy *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyBranchDeletedBy `json:"branch_deleted_by"`

	// The id of the branch the deploy request was created from
	// Required: true
	BranchID *string `json:"branch_id"`

	// When the deploy request was closed
	// Required: true
	ClosedAt *string `json:"closed_at"`

	// closed by
	// Required: true
	ClosedBy *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyClosedBy `json:"closed_by"`

	// When the deploy request was created
	// Required: true
	CreatedAt *string `json:"created_at"`

	// When the deploy request was deployed
	// Required: true
	DeployedAt *string `json:"deployed_at"`

	// deployment
	// Required: true
	Deployment *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment `json:"deployment"`

	// The deployment state of the deploy request
	// Required: true
	// Enum: [pending ready no_changes queued submitting in_progress pending_cutover in_progress_vschema in_progress_cancel in_progress_cutover complete complete_cancel complete_error complete_pending_revert in_progress_revert complete_revert complete_revert_error cancelled error]
	DeploymentState *string `json:"deployment_state"`

	// The HTML body of the deploy request
	// Required: true
	HTMLBody *string `json:"html_body"`

	// The PlanetScale app address for the deploy request
	// Required: true
	HTMLURL *string `json:"html_url"`

	// The ID of the deploy request
	// Required: true
	ID *string `json:"id"`

	// The name of the branch the deploy request will be merged into
	// Required: true
	IntoBranch *string `json:"into_branch"`

	// The number of shards the branch the deploy request will be merged into has
	// Required: true
	IntoBranchShardCount *float64 `json:"into_branch_shard_count"`

	// Whether or not the branch the deploy request will be merged into is sharded
	// Required: true
	IntoBranchSharded *bool `json:"into_branch_sharded"`

	// Notes on the deploy request
	// Required: true
	Notes *string `json:"notes"`

	// The number of the deploy request
	// Required: true
	Number *float64 `json:"number"`

	// Whether the deploy request is open or closed
	// Required: true
	// Enum: [open closed]
	State *string `json:"state"`

	// When the deploy request was last updated
	// Required: true
	UpdatedAt *string `json:"updated_at"`
}

// Validate validates this patch organizations organization databases database deploy requests number o k body
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActor(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateApproved(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBranch(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBranchDeleted(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBranchDeletedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBranchDeletedBy(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBranchID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateClosedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateClosedBy(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDeployedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDeployment(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDeploymentState(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateHTMLBody(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateHTMLURL(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIntoBranch(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIntoBranchShardCount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIntoBranchSharded(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNotes(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateState(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateActor(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"actor", "body", o.Actor); err != nil {
		return err
	}

	if o.Actor != nil {
		if err := o.Actor.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "actor")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "actor")
			}
			return err
		}
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateApproved(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"approved", "body", o.Approved); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateBranch(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"branch", "body", o.Branch); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateBranchDeleted(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"branch_deleted", "body", o.BranchDeleted); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateBranchDeletedAt(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"branch_deleted_at", "body", o.BranchDeletedAt); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateBranchDeletedBy(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"branch_deleted_by", "body", o.BranchDeletedBy); err != nil {
		return err
	}

	if o.BranchDeletedBy != nil {
		if err := o.BranchDeletedBy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "branch_deleted_by")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "branch_deleted_by")
			}
			return err
		}
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateBranchID(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"branch_id", "body", o.BranchID); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateClosedAt(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"closed_at", "body", o.ClosedAt); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateClosedBy(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"closed_by", "body", o.ClosedBy); err != nil {
		return err
	}

	if o.ClosedBy != nil {
		if err := o.ClosedBy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "closed_by")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "closed_by")
			}
			return err
		}
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"created_at", "body", o.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateDeployedAt(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"deployed_at", "body", o.DeployedAt); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateDeployment(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"deployment", "body", o.Deployment); err != nil {
		return err
	}

	if o.Deployment != nil {
		if err := o.Deployment.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "deployment")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "deployment")
			}
			return err
		}
	}

	return nil
}

var patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyTypeDeploymentStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["pending","ready","no_changes","queued","submitting","in_progress","pending_cutover","in_progress_vschema","in_progress_cancel","in_progress_cutover","complete","complete_cancel","complete_error","complete_pending_revert","in_progress_revert","complete_revert","complete_revert_error","cancelled","error"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyTypeDeploymentStatePropEnum = append(patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyTypeDeploymentStatePropEnum, v)
	}
}

const (

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStatePending captures enum value "pending"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStatePending string = "pending"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateReady captures enum value "ready"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateReady string = "ready"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateNoChanges captures enum value "no_changes"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateNoChanges string = "no_changes"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateQueued captures enum value "queued"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateQueued string = "queued"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateSubmitting captures enum value "submitting"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateSubmitting string = "submitting"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgress captures enum value "in_progress"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgress string = "in_progress"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStatePendingCutover captures enum value "pending_cutover"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStatePendingCutover string = "pending_cutover"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressVschema captures enum value "in_progress_vschema"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressVschema string = "in_progress_vschema"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressCancel captures enum value "in_progress_cancel"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressCancel string = "in_progress_cancel"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressCutover captures enum value "in_progress_cutover"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressCutover string = "in_progress_cutover"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateComplete captures enum value "complete"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateComplete string = "complete"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteCancel captures enum value "complete_cancel"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteCancel string = "complete_cancel"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteError captures enum value "complete_error"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteError string = "complete_error"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompletePendingRevert captures enum value "complete_pending_revert"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompletePendingRevert string = "complete_pending_revert"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressRevert captures enum value "in_progress_revert"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressRevert string = "in_progress_revert"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteRevert captures enum value "complete_revert"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteRevert string = "complete_revert"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteRevertError captures enum value "complete_revert_error"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteRevertError string = "complete_revert_error"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCancelled captures enum value "cancelled"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCancelled string = "cancelled"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateError captures enum value "error"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateError string = "error"
)

// prop value enum
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateDeploymentStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyTypeDeploymentStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateDeploymentState(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"deployment_state", "body", o.DeploymentState); err != nil {
		return err
	}

	// value enum
	if err := o.validateDeploymentStateEnum("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"deployment_state", "body", *o.DeploymentState); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateHTMLBody(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"html_body", "body", o.HTMLBody); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateHTMLURL(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"html_url", "body", o.HTMLURL); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateIntoBranch(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"into_branch", "body", o.IntoBranch); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateIntoBranchShardCount(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"into_branch_shard_count", "body", o.IntoBranchShardCount); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateIntoBranchSharded(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"into_branch_sharded", "body", o.IntoBranchSharded); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateNotes(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"notes", "body", o.Notes); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateNumber(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"number", "body", o.Number); err != nil {
		return err
	}

	return nil
}

var patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["open","closed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyTypeStatePropEnum = append(patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyTypeStatePropEnum, v)
	}
}

const (

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyStateOpen captures enum value "open"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyStateOpen string = "open"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyStateClosed captures enum value "closed"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyStateClosed string = "closed"
)

// prop value enum
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyTypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateState(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"state", "body", o.State); err != nil {
		return err
	}

	// value enum
	if err := o.validateStateEnum("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"state", "body", *o.State); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"updated_at", "body", o.UpdatedAt); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this patch organizations organization databases database deploy requests number o k body based on the context it is used
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateActor(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateBranchDeletedBy(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateClosedBy(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateDeployment(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) contextValidateActor(ctx context.Context, formats strfmt.Registry) error {

	if o.Actor != nil {

		if err := o.Actor.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "actor")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "actor")
			}
			return err
		}
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) contextValidateBranchDeletedBy(ctx context.Context, formats strfmt.Registry) error {

	if o.BranchDeletedBy != nil {

		if err := o.BranchDeletedBy.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "branch_deleted_by")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "branch_deleted_by")
			}
			return err
		}
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) contextValidateClosedBy(ctx context.Context, formats strfmt.Registry) error {

	if o.ClosedBy != nil {

		if err := o.ClosedBy.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "closed_by")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "closed_by")
			}
			return err
		}
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) contextValidateDeployment(ctx context.Context, formats strfmt.Registry) error {

	if o.Deployment != nil {

		if err := o.Deployment.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "deployment")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK" + "." + "deployment")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody) UnmarshalBinary(b []byte) error {
	var res PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyActor patch organizations organization databases database deploy requests number o k body actor
swagger:model PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyActor
*/
type PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyActor struct {

	// The URL of the actor's avatar
	// Required: true
	AvatarURL *string `json:"avatar_url"`

	// The name of the actor
	// Required: true
	DisplayName *string `json:"display_name"`

	// The ID of the actor
	// Required: true
	ID *string `json:"id"`
}

// Validate validates this patch organizations organization databases database deploy requests number o k body actor
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyActor) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAvatarURL(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyActor) validateAvatarURL(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"actor"+"."+"avatar_url", "body", o.AvatarURL); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyActor) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"actor"+"."+"display_name", "body", o.DisplayName); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyActor) validateID(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"actor"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this patch organizations organization databases database deploy requests number o k body actor based on context it is used
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyActor) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyActor) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyActor) UnmarshalBinary(b []byte) error {
	var res PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyActor
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyBranchDeletedBy patch organizations organization databases database deploy requests number o k body branch deleted by
swagger:model PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyBranchDeletedBy
*/
type PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyBranchDeletedBy struct {

	// The URL of the actor's avatar
	// Required: true
	AvatarURL *string `json:"avatar_url"`

	// The name of the actor
	// Required: true
	DisplayName *string `json:"display_name"`

	// The ID of the actor
	// Required: true
	ID *string `json:"id"`
}

// Validate validates this patch organizations organization databases database deploy requests number o k body branch deleted by
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyBranchDeletedBy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAvatarURL(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyBranchDeletedBy) validateAvatarURL(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"branch_deleted_by"+"."+"avatar_url", "body", o.AvatarURL); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyBranchDeletedBy) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"branch_deleted_by"+"."+"display_name", "body", o.DisplayName); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyBranchDeletedBy) validateID(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"branch_deleted_by"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this patch organizations organization databases database deploy requests number o k body branch deleted by based on context it is used
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyBranchDeletedBy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyBranchDeletedBy) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyBranchDeletedBy) UnmarshalBinary(b []byte) error {
	var res PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyBranchDeletedBy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyClosedBy patch organizations organization databases database deploy requests number o k body closed by
swagger:model PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyClosedBy
*/
type PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyClosedBy struct {

	// The URL of the actor's avatar
	// Required: true
	AvatarURL *string `json:"avatar_url"`

	// The name of the actor
	// Required: true
	DisplayName *string `json:"display_name"`

	// The ID of the actor
	// Required: true
	ID *string `json:"id"`
}

// Validate validates this patch organizations organization databases database deploy requests number o k body closed by
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyClosedBy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAvatarURL(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyClosedBy) validateAvatarURL(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"closed_by"+"."+"avatar_url", "body", o.AvatarURL); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyClosedBy) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"closed_by"+"."+"display_name", "body", o.DisplayName); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyClosedBy) validateID(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"closed_by"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this patch organizations organization databases database deploy requests number o k body closed by based on context it is used
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyClosedBy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyClosedBy) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyClosedBy) UnmarshalBinary(b []byte) error {
	var res PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyClosedBy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment patch organizations organization databases database deploy requests number o k body deployment
swagger:model PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment
*/
type PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment struct {

	// Whether or not to automatically cutover once deployment is finished
	// Required: true
	AutoCutover *bool `json:"auto_cutover"`

	// When the deployment was created
	// Required: true
	CreatedAt *string `json:"created_at"`

	// When the cutover for the deployment was initiated
	CutoverAt string `json:"cutover_at,omitempty"`

	// Whether or not the deployment cutover will expire soon and be cancelled
	// Required: true
	CutoverExpiring *bool `json:"cutover_expiring"`

	// Deploy check errors for the deployment
	DeployCheckErrors string `json:"deploy_check_errors,omitempty"`

	// When the deployment was finished
	FinishedAt string `json:"finished_at,omitempty"`

	// The ID for a deployment
	// Required: true
	ID *string `json:"id"`

	// When the deployment was queued
	QueuedAt string `json:"queued_at,omitempty"`

	// When the deployment was ready for cutover
	ReadyToCutoverAt string `json:"ready_to_cutover_at,omitempty"`

	// When the deployment was started
	StartedAt string `json:"started_at,omitempty"`

	// The state the deployment is in
	// Required: true
	// Enum: [pending ready no_changes queued submitting in_progress pending_cutover in_progress_vschema in_progress_cancel in_progress_cutover complete complete_cancel complete_error complete_pending_revert in_progress_revert complete_revert complete_revert_error cancelled error]
	State *string `json:"state"`

	// When the deployment was submitted
	// Required: true
	SubmittedAt *string `json:"submitted_at"`

	// When the deployment was last updated
	// Required: true
	UpdatedAt *string `json:"updated_at"`
}

// Validate validates this patch organizations organization databases database deploy requests number o k body deployment
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAutoCutover(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCutoverExpiring(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateState(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSubmittedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment) validateAutoCutover(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"deployment"+"."+"auto_cutover", "body", o.AutoCutover); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"deployment"+"."+"created_at", "body", o.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment) validateCutoverExpiring(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"deployment"+"."+"cutover_expiring", "body", o.CutoverExpiring); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment) validateID(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"deployment"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

var patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["pending","ready","no_changes","queued","submitting","in_progress","pending_cutover","in_progress_vschema","in_progress_cancel","in_progress_cutover","complete","complete_cancel","complete_error","complete_pending_revert","in_progress_revert","complete_revert","complete_revert_error","cancelled","error"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentTypeStatePropEnum = append(patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentTypeStatePropEnum, v)
	}
}

const (

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStatePending captures enum value "pending"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStatePending string = "pending"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateReady captures enum value "ready"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateReady string = "ready"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateNoChanges captures enum value "no_changes"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateNoChanges string = "no_changes"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateQueued captures enum value "queued"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateQueued string = "queued"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateSubmitting captures enum value "submitting"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateSubmitting string = "submitting"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgress captures enum value "in_progress"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgress string = "in_progress"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStatePendingCutover captures enum value "pending_cutover"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStatePendingCutover string = "pending_cutover"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressVschema captures enum value "in_progress_vschema"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressVschema string = "in_progress_vschema"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressCancel captures enum value "in_progress_cancel"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressCancel string = "in_progress_cancel"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressCutover captures enum value "in_progress_cutover"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressCutover string = "in_progress_cutover"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateComplete captures enum value "complete"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateComplete string = "complete"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteCancel captures enum value "complete_cancel"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteCancel string = "complete_cancel"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteError captures enum value "complete_error"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteError string = "complete_error"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompletePendingRevert captures enum value "complete_pending_revert"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompletePendingRevert string = "complete_pending_revert"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressRevert captures enum value "in_progress_revert"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateInProgressRevert string = "in_progress_revert"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteRevert captures enum value "complete_revert"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteRevert string = "complete_revert"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteRevertError captures enum value "complete_revert_error"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCompleteRevertError string = "complete_revert_error"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCancelled captures enum value "cancelled"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateCancelled string = "cancelled"

	// PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateError captures enum value "error"
	PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentStateError string = "error"
)

// prop value enum
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeploymentTypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment) validateState(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"deployment"+"."+"state", "body", o.State); err != nil {
		return err
	}

	// value enum
	if err := o.validateStateEnum("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"deployment"+"."+"state", "body", *o.State); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment) validateSubmittedAt(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"deployment"+"."+"submitted_at", "body", o.SubmittedAt); err != nil {
		return err
	}

	return nil
}

func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("patchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOK"+"."+"deployment"+"."+"updated_at", "body", o.UpdatedAt); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this patch organizations organization databases database deploy requests number o k body deployment based on context it is used
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment) UnmarshalBinary(b []byte) error {
	var res PatchOrganizationsOrganizationDatabasesDatabaseDeployRequestsNumberOKBodyDeployment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
