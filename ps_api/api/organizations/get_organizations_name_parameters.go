// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetOrganizationsNameParams creates a new GetOrganizationsNameParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrganizationsNameParams() *GetOrganizationsNameParams {
	return &GetOrganizationsNameParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrganizationsNameParamsWithTimeout creates a new GetOrganizationsNameParams object
// with the ability to set a timeout on a request.
func NewGetOrganizationsNameParamsWithTimeout(timeout time.Duration) *GetOrganizationsNameParams {
	return &GetOrganizationsNameParams{
		timeout: timeout,
	}
}

// NewGetOrganizationsNameParamsWithContext creates a new GetOrganizationsNameParams object
// with the ability to set a context for a request.
func NewGetOrganizationsNameParamsWithContext(ctx context.Context) *GetOrganizationsNameParams {
	return &GetOrganizationsNameParams{
		Context: ctx,
	}
}

// NewGetOrganizationsNameParamsWithHTTPClient creates a new GetOrganizationsNameParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrganizationsNameParamsWithHTTPClient(client *http.Client) *GetOrganizationsNameParams {
	return &GetOrganizationsNameParams{
		HTTPClient: client,
	}
}

/*
GetOrganizationsNameParams contains all the parameters to send to the API endpoint

	for the get organizations name operation.

	Typically these are written to a http.Request.
*/
type GetOrganizationsNameParams struct {

	/* Name.

	   The name of the organization
	*/
	Name string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get organizations name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationsNameParams) WithDefaults() *GetOrganizationsNameParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get organizations name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationsNameParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get organizations name params
func (o *GetOrganizationsNameParams) WithTimeout(timeout time.Duration) *GetOrganizationsNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get organizations name params
func (o *GetOrganizationsNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get organizations name params
func (o *GetOrganizationsNameParams) WithContext(ctx context.Context) *GetOrganizationsNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get organizations name params
func (o *GetOrganizationsNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get organizations name params
func (o *GetOrganizationsNameParams) WithHTTPClient(client *http.Client) *GetOrganizationsNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get organizations name params
func (o *GetOrganizationsNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the get organizations name params
func (o *GetOrganizationsNameParams) WithName(name string) *GetOrganizationsNameParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get organizations name params
func (o *GetOrganizationsNameParams) SetName(name string) {
	o.Name = name
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrganizationsNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
